{"version":3,"file":"199.js","mappings":"gIAGO,SAASA,EAAiBC,EAAUC,GACzC,IAAMC,EAASC,SAASC,eAAeJ,GACnCC,GACFC,EAAOG,UAAUC,IAAI,WACrBJ,EAAOK,UAAW,IAElBL,EAAOG,UAAUG,OAAO,WACxBN,EAAOK,UAAW,EAEtB,CAGO,SAASE,EAAaC,GAAwB,IAAfC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,OACrCG,EAAgBZ,SAASC,eAAe,kBAC9CW,EAAcC,YAAcN,EAC5BK,EAAcE,UAAY,4BAAHC,OAA+BP,EAAI,aAG7C,YAATA,IACFI,EAAcV,UAAUC,IAAI,qBAC5Ba,YAAW,WACTJ,EAAcV,UAAUG,OAAO,oBACjC,GAAG,KAEP,CAEO,SAASY,EAAoBV,GAWpC,IACQW,EACFC,EAEEC,EAdNpB,SAASC,eAAe,oBAAoBoB,MAAMC,QAAU,QAC5DtB,SAASC,eAAe,iBAAiBY,YAAcN,EAUjDW,EAAclB,SAASC,eAAe,gBACxCkB,EAAW,EAETC,EAAWG,aAAY,YAC3BJ,GAA4B,GAAhBK,KAAKC,UACF,KAAIN,EAAW,IAE9BD,EAAYG,MAAMK,MAAQP,EAAW,IAEjCA,GAAY,IACdQ,cAAcP,EAElB,GAAG,IApBL,CAEO,SAASQ,IACd5B,SAASC,eAAe,oBAAoBoB,MAAMC,QAAU,MAC9D,CAoBO,SAASO,EAAYC,GAC1BC,QAAQD,MAAM,SAAUA,GACxB,IAAIE,EAAe,oBAEfF,EAAMvB,QACRyB,EAAeF,EAAMvB,QACK,iBAAVuB,IAChBE,EAAeF,GAGjBxB,EAAa0B,EAAc,SAC3BJ,GACF,CAGO,SAASK,IACd,IAAMC,EAAiBlC,SAASC,eAAe,mBACzCkC,EAAiBnC,SAASC,eAAe,mBAE/CiC,EAAeb,MAAMC,QAAU,OAC/Ba,EAAeC,UAAY,GAE3B9B,EAAa,kBAAmB,OAClC,CAEO,SAAS+B,IACd,IAAMC,EAAqBtC,SAASC,eAAe,uBAC7CsC,EAAqBvC,SAASC,eAAe,uBAEnDqC,EAAmBjB,MAAMC,QAAU,OACnCiB,EAAmBH,UAAY,GAE/B9B,EAAa,sBAAuB,OACtC,CAGO,SAASkC,IAEd,GAAIC,OAAOC,SAAWD,OAAOC,QAAQC,YAAa,CAChD,IAAMC,EAAQH,OAAOC,QAAQC,YAC7B3C,SAAS6C,KAAK/B,UAAY,gBAAHC,OAAmB6B,EAAME,oBAClD,CACF,C","sources":["webpack://starling-word-addin/./src/shared/utils.js"],"sourcesContent":["// Shared utility functions\n\n// Enhanced button state management\nexport function setButtonLoading(buttonId, isLoading) {\n  const button = document.getElementById(buttonId);\n  if (isLoading) {\n    button.classList.add(\"loading\");\n    button.disabled = true;\n  } else {\n    button.classList.remove(\"loading\");\n    button.disabled = false;\n  }\n}\n\n// Helper functions\nexport function updateStatus(message, type = \"info\") {\n  const statusElement = document.getElementById(\"status-message\");\n  statusElement.textContent = message;\n  statusElement.className = `status-message ms-font-s ${type} slide-in`;\n\n  // Add success animation for success messages\n  if (type === \"success\") {\n    statusElement.classList.add(\"success-animation\");\n    setTimeout(() => {\n      statusElement.classList.remove(\"success-animation\");\n    }, 600);\n  }\n}\n\nexport function showProgressSection(message) {\n  document.getElementById(\"progress-section\").style.display = \"block\";\n  document.getElementById(\"progress-text\").textContent = message;\n  simulateProgress();\n}\n\nexport function hideProgressSection() {\n  document.getElementById(\"progress-section\").style.display = \"none\";\n}\n\n// Progress simulation\nfunction simulateProgress() {\n  const progressBar = document.getElementById(\"progress-bar\");\n  let progress = 0;\n  \n  const interval = setInterval(() => {\n    progress += Math.random() * 15;\n    if (progress > 90) progress = 90;\n    \n    progressBar.style.width = progress + \"%\";\n    \n    if (progress >= 90) {\n      clearInterval(interval);\n    }\n  }, 200);\n}\n\n// Error handling\nexport function handleError(error) {\n  console.error(\"Error:\", error);\n  let errorMessage = \"An error occurred\";\n  \n  if (error.message) {\n    errorMessage = error.message;\n  } else if (typeof error === 'string') {\n    errorMessage = error;\n  }\n  \n  updateStatus(errorMessage, \"error\");\n  hideProgressSection();\n}\n\n// Clear results functions\nexport function clearResults() {\n  const resultsSection = document.getElementById(\"results-section\");\n  const resultsContent = document.getElementById(\"results-content\");\n  \n  resultsSection.style.display = \"none\";\n  resultsContent.innerHTML = \"\";\n  \n  updateStatus(\"Results cleared\", \"info\");\n}\n\nexport function clearSuggestions() {\n  const suggestionsSection = document.getElementById(\"suggestions-section\");\n  const suggestionsContent = document.getElementById(\"suggestions-content\");\n  \n  suggestionsSection.style.display = \"none\";\n  suggestionsContent.innerHTML = \"\";\n  \n  updateStatus(\"Suggestions cleared\", \"info\");\n}\n\n// Theme detection and initialization\nexport function initializeTheme() {\n  // Detect Office theme\n  if (Office.context && Office.context.officeTheme) {\n    const theme = Office.context.officeTheme;\n    document.body.className = `office-theme-${theme.bodyBackgroundColor}`;\n  }\n}\n"],"names":["setButtonLoading","buttonId","isLoading","button","document","getElementById","classList","add","disabled","remove","updateStatus","message","type","arguments","length","undefined","statusElement","textContent","className","concat","setTimeout","showProgressSection","progressBar","progress","interval","style","display","setInterval","Math","random","width","clearInterval","hideProgressSection","handleError","error","console","errorMessage","clearResults","resultsSection","resultsContent","innerHTML","clearSuggestions","suggestionsSection","suggestionsContent","initializeTheme","Office","context","officeTheme","theme","body","bodyBackgroundColor"],"sourceRoot":""}