{"version":3,"file":"709.js","mappings":"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","sources":["webpack://starling-word-addin/./src/taskpane/modules/ui-display.js"],"sourcesContent":["// UI Display Module - handles all result display functionality\n// NO STATIC IMPORTS - All imports will be dynamic to prevent Word API access during loading\n\n// Display combined analysis results\nexport function displayCombinedAnalysisResults(analysisResult, riskAnalysis, changeSuggestions, summaryResult) {\n  const resultsContent = document.getElementById(\"results-content\");\n  const resultsSection = document.getElementById(\"results-section\");\n\n  // Get contract structure data\n  const structure = analysisResult.contract_structure;\n  const modifiedClauses = structure.articles.reduce((count, article) =>\n    count + article.clauses.filter(clause => clause.changeStatus?.isModified).length, 0);\n  const totalClauses = structure.articles.reduce((count, article) => count + article.clauses.length, 0);\n\n  let html = `\n    <div class=\"analysis-results\">\n      <!-- 1. CONTRACT STRUCTURE BREAKDOWN (FIRST) -->\n      <div class=\"analysis-section contract-structure\">\n        <h3>📋 Contract Structure</h3>\n        <div class=\"structure-overview\">\n          <p><strong>Total Articles:</strong> ${structure.articles.length}</p>\n          <p><strong>Total Clauses:</strong> ${totalClauses}</p>\n        </div>\n        \n        <div class=\"articles-breakdown\">`;\n\n  // Display each article with its clauses\n  structure.articles.forEach(article => {\n    html += `\n          <div class=\"article-item\">\n            <h4 class=\"article-title\">${article.number}. ${article.title}</h4>\n            <div class=\"clauses-list\">`;\n    \n    article.clauses.forEach(clause => {\n      const statusClass = clause.changeStatus?.isModified ? 'modified' : 'unmodified';\n      const statusColor = clause.changeStatus?.isModified ? 'red' : 'green';\n      \n      html += `\n              <div class=\"clause-item ${statusClass}\">\n                <span class=\"clause-number\" style=\"color: ${statusColor};\">${clause.number}</span>\n                <span class=\"clause-text\">${clause.text.substring(0, 100)}${clause.text.length > 100 ? '...' : ''}</span>\n              </div>`;\n    });\n    \n    html += `\n            </div>\n          </div>`;\n  });\n\n  html += `\n        </div>\n      </div>\n\n      <!-- 2. TRACK CHANGES SUMMARY (AFTER STRUCTURE) -->\n      <div class=\"analysis-section track-changes-summary\">\n        <h3>🔄 Track Changes Summary</h3>\n        ${structure.trackChanges ? `\n          <div class=\"change-tracking-info\">\n            <p><strong>Track Changes:</strong> ${structure.trackChanges.enabled ? 'Enabled' : 'Disabled'}</p>\n            ${structure.trackChanges.enabled ? `\n              <p><strong>Modified Clauses:</strong> <span class=\"modified-count\">${modifiedClauses}</span> / ${totalClauses}</p>\n              <p><strong>Unmodified Clauses:</strong> <span class=\"unmodified-count\">${totalClauses - modifiedClauses}</span> / ${totalClauses}</p>\n            ` : ''}\n            ${structure.trackChanges.note ? `<p class=\"track-changes-note\"><em>${structure.trackChanges.note}</em></p>` : ''}\n            ${structure.trackChanges.demoMode ? '<p class=\"demo-note\"><em>Demo mode - simulated changes for testing</em></p>' : ''}\n          </div>\n          ${structure.trackChanges.enabled ? `\n            <div class=\"change-legend\">\n              <div class=\"legend-item\">\n                <span class=\"legend-indicator modified\"></span>\n                <span>Modified Clause</span>\n              </div>\n              <div class=\"legend-item\">\n                <span class=\"legend-indicator unmodified\"></span>\n                <span>Unmodified Clause</span>\n              </div>\n            </div>\n          ` : ''}\n        ` : ''}\n      </div>\n\n      <!-- 3. EXECUTIVE SUMMARY SECTION -->\n      <div class=\"analysis-summary\">\n        <h3>${summaryResult.title}</h3>\n        <div class=\"summary-overview\">\n          <p>${summaryResult.overview}</p>\n        </div>\n        \n        <div class=\"summary-metrics\">\n          <div class=\"metric-item\">\n            <span class=\"metric-label\">Contract Type:</span>\n            <span class=\"metric-value\">${analysisResult.contract_type}</span>\n          </div>\n          <div class=\"metric-item\">\n            <span class=\"metric-label\">Word Count:</span>\n            <span class=\"metric-value\">${analysisResult.word_count}</span>\n          </div>\n          <div class=\"metric-item\">\n            <span class=\"metric-label\">Compliance Score:</span>\n            <span class=\"metric-value compliance-score\">${analysisResult.compliance_score}%</span>\n          </div>\n          <div class=\"metric-item\">\n            <span class=\"metric-label\">Risk Score:</span>\n            <span class=\"metric-value risk-score\">${riskAnalysis.risk_score}%</span>\n          </div>\n        </div>\n      </div>\n\n      <!-- 4. DETAILED ANALYSIS SECTIONS -->\n      <div class=\"detailed-analysis\">\n        \n        <!-- Risk Analysis -->\n        <div class=\"analysis-section risks\">\n          <h3>⚠️ Risk Analysis</h3>\n          <p class=\"section-summary\">${riskAnalysis.summary}</p>\n          \n          <div class=\"risks-list\">`;\n\n  riskAnalysis.risks.forEach(risk => {\n    const severityClass = `severity-${risk.severity}`;\n    html += `\n            <div class=\"risk-item ${severityClass}\">\n              <div class=\"risk-header\">\n                <span class=\"risk-severity\">${risk.severity.toUpperCase()}</span>\n                <span class=\"risk-title\">${risk.title}</span>\n              </div>\n              <p class=\"risk-description\">${risk.description}</p>\n              <p class=\"risk-suggestion\"><strong>Suggestion:</strong> ${risk.suggestion}</p>\n            </div>`;\n  });\n\n  html += `\n          </div>\n        </div>\n\n        <!-- Change Suggestions -->\n        <div class=\"analysis-section suggestions\">\n          <h3>💡 Improvement Suggestions</h3>\n          <p class=\"section-summary\">${changeSuggestions.summary}</p>\n          \n          <div class=\"suggestions-list\">`;\n\n  changeSuggestions.suggestions.forEach(suggestion => {\n    const priorityClass = `priority-${suggestion.priority}`;\n    html += `\n            <div class=\"suggestion-item ${priorityClass}\">\n              <div class=\"suggestion-header\">\n                <span class=\"suggestion-priority\">${suggestion.priority.toUpperCase()}</span>\n                <span class=\"suggestion-title\">${suggestion.title}</span>\n              </div>\n              <div class=\"suggestion-details\">\n                <p><strong>Current:</strong> ${suggestion.current}</p>\n                <p><strong>Suggested:</strong> ${suggestion.suggested}</p>\n                <p><strong>Benefit:</strong> ${suggestion.benefit}</p>\n              </div>\n            </div>`;\n  });\n\n  html += `\n          </div>\n        </div>\n\n        <!-- Key Terms -->\n        <div class=\"analysis-section key-terms\">\n          <h3>🔑 Key Terms Identified</h3>\n          <div class=\"terms-list\">`;\n\n  analysisResult.key_terms.forEach(term => {\n    html += `<span class=\"term-tag\">${term}</span>`;\n  });\n\n  html += `\n          </div>\n        </div>\n\n        <!-- Recommendations -->\n        <div class=\"analysis-section recommendations\">\n          <h3>📝 Recommendations</h3>\n          <ul class=\"recommendations-list\">`;\n\n  analysisResult.recommendations.forEach(rec => {\n    html += `<li>${rec}</li>`;\n  });\n\n  html += `\n          </ul>\n        </div>\n      </div>\n    </div>`;\n\n  resultsContent.innerHTML = html;\n  resultsSection.style.display = \"block\";\n\n  // Show suggestions section with Apply Changes button\n  showSuggestionsSection(changeSuggestions);\n}\n\n// Show suggestions section with apply changes functionality\nexport function showSuggestionsSection(changeSuggestions) {\n  const suggestionsSection = document.getElementById(\"suggestions-section\");\n  const suggestionsContent = document.getElementById(\"suggestions-content\");\n\n  let html = `\n    <div class=\"suggestions-header\">\n      <h3>💡 Contract Improvement Suggestions</h3>\n      <p>Review and apply the following suggestions to improve your contract:</p>\n    </div>\n    \n    <div class=\"suggestions-list\">`;\n\n  changeSuggestions.suggestions.forEach((suggestion, index) => {\n    const priorityClass = `priority-${suggestion.priority}`;\n    html += `\n      <div class=\"suggestion-card ${priorityClass}\">\n        <div class=\"suggestion-header\">\n          <span class=\"priority-badge ${suggestion.priority}\">${suggestion.priority.toUpperCase()}</span>\n          <h4>${suggestion.title}</h4>\n        </div>\n        <div class=\"suggestion-content\">\n          <div class=\"current-state\">\n            <strong>Current:</strong> ${suggestion.current}\n          </div>\n          <div class=\"suggested-change\">\n            <strong>Suggested:</strong> ${suggestion.suggested}\n          </div>\n          <div class=\"benefit\">\n            <strong>Benefit:</strong> ${suggestion.benefit}\n          </div>\n        </div>\n        <div class=\"suggestion-actions\">\n          <button class=\"apply-suggestion-btn\" onclick=\"applySuggestion(${index})\">\n            Apply This Change\n          </button>\n        </div>\n      </div>`;\n  });\n\n  html += `\n    </div>\n    \n    <div class=\"suggestions-actions\">\n      <button id=\"apply-all-changes-btn\" class=\"primary-button\" onclick=\"applyAllChanges()\">\n        Apply All Changes\n      </button>\n      <button id=\"dismiss-suggestions-btn\" class=\"secondary-button\" onclick=\"dismissSuggestions()\">\n        Dismiss Suggestions\n      </button>\n    </div>`;\n\n  suggestionsContent.innerHTML = html;\n  suggestionsSection.style.display = \"block\";\n}\n\n// Display contract generation results\nexport function displayContractResults(result) {\n  const resultsContent = document.getElementById(\"results-content\");\n  const resultsSection = document.getElementById(\"results-section\");\n\n  const html = `\n    <div class=\"contract-results\">\n      <h3>✅ Contract Generated Successfully</h3>\n      <div class=\"contract-info\">\n        <p><strong>Contract Type:</strong> ${result.metadata?.template_used || 'Content Management Agreement'}</p>\n        <p><strong>Generated:</strong> ${new Date(result.metadata?.generated_at || new Date()).toLocaleString()}</p>\n        <p><strong>Status:</strong> <span class=\"status-success\">Ready for Review</span></p>\n      </div>\n      \n      <div class=\"contract-actions\">\n        <button id=\"review-contract-btn\" class=\"primary-button\" onclick=\"reviewGeneratedContract()\">\n          📋 Review Contract\n        </button>\n        <button id=\"analyze-new-contract-btn\" class=\"secondary-button\" onclick=\"analyzeContract()\">\n          🔍 Analyze Generated Contract\n        </button>\n      </div>\n      \n      <div class=\"next-steps\">\n        <h4>Next Steps:</h4>\n        <ul>\n          <li>Review the generated contract content</li>\n          <li>Run contract analysis to check for risks</li>\n          <li>Make any necessary modifications</li>\n          <li>Save and share with relevant parties</li>\n        </ul>\n      </div>\n    </div>`;\n\n  resultsContent.innerHTML = html;\n  resultsSection.style.display = \"block\";\n}\n\n// Display structured analysis results following the new AI prompt format\nexport function displayStructuredAnalysisResults(analysisResult) {\n  const resultsContent = document.getElementById(\"results-content\");\n  const resultsSection = document.getElementById(\"results-section\");\n\n  // Check if we have the new structured analysis format\n  if (!analysisResult.structured_analysis) {\n    // Fall back to the existing display function\n    console.log(\"No structured analysis found, using legacy display\");\n    return;\n  }\n\n  const structured = analysisResult.structured_analysis;\n\n  let html = `\n    <div class=\"structured-analysis-results\">\n      <div class=\"analysis-header\">\n        <h2>📋 AI Contract Analysis Report</h2>\n        <div class=\"analysis-meta\">\n          <p><strong>Contract Type:</strong> ${analysisResult.contract_type}</p>\n          <p><strong>Analysis Date:</strong> ${new Date(structured.analysis_timestamp).toLocaleString()}</p>\n          <p><strong>AI Prompt:</strong> ${structured.ai_prompt_used}</p>\n        </div>\n      </div>\n\n      <!-- 1. ARTICLE STRUCTURE (Following numbering: 1, 1.1, 1.1.1, 2, 2.1, etc.) -->\n      <div class=\"analysis-section article-structure\">\n        <h3>📑 Contract Structure Analysis</h3>\n        <div class=\"structure-summary\">\n          <p>Articles identified and numbered according to legal standards:</p>\n        </div>\n\n        <div class=\"articles-breakdown\">`;\n\n  // Display articles with proper numbering\n  structured.article_structure.forEach(article => {\n    html += `\n          <div class=\"article-container\">\n            <div class=\"article-header\">\n              <h4 class=\"article-number\">Article ${article.number}</h4>\n              <h5 class=\"article-title\">${article.title}</h5>\n            </div>\n\n            <div class=\"clauses-container\">`;\n\n    article.clauses.forEach(clause => {\n      html += `\n              <div class=\"clause-item\">\n                <span class=\"clause-number\">${clause.number}</span>\n                <div class=\"clause-content\">\n                  <p>${clause.content}</p>\n                  <small class=\"line-reference\">Line ${clause.line_number}</small>\n                </div>\n              </div>`;\n    });\n\n    html += `\n            </div>\n          </div>`;\n  });\n\n  html += `\n        </div>\n      </div>\n\n      <!-- 2. DEVIATION ANALYSIS -->\n      <div class=\"analysis-section deviation-analysis\">\n        <h3>⚖️ Standard Library Comparison</h3>\n        <div class=\"deviations-summary\">\n          <p>Deviations from company standard clauses:</p>\n        </div>\n\n        <div class=\"deviations-list\">`;\n\n  structured.deviation_analysis.forEach(deviation => {\n    const statusClass = deviation.negotiable_status === 'negotiable' ? 'negotiable' : 'non-negotiable';\n    const riskClass = `risk-${deviation.risk_level}`;\n\n    html += `\n          <div class=\"deviation-item ${statusClass} ${riskClass}\">\n            <div class=\"deviation-header\">\n              <span class=\"clause-ref\">Clause ${deviation.clause_reference}</span>\n              <span class=\"negotiable-badge ${deviation.negotiable_status}\">\n                ${deviation.negotiable_status.toUpperCase()}\n              </span>\n              <span class=\"risk-badge ${deviation.risk_level}\">\n                ${deviation.risk_level.toUpperCase()} RISK\n              </span>\n            </div>\n\n            <div class=\"deviation-content\">\n              <h5>${deviation.clause_title}</h5>\n              <p class=\"deviation-description\">${deviation.deviation_description}</p>\n\n              <div class=\"language-comparison\">\n                <div class=\"current-language\">\n                  <strong>Current Language:</strong>\n                  <p>${deviation.current_language}</p>\n                </div>\n                <div class=\"standard-language\">\n                  <strong>Standard Library:</strong>\n                  <p>${deviation.standard_language}</p>\n                </div>\n              </div>\n\n              <div class=\"business-impact\">\n                <strong>Business Impact:</strong> ${deviation.business_impact}\n              </div>\n            </div>\n          </div>`;\n  });\n\n  html += `\n        </div>\n      </div>\n\n      <!-- 3. IMPROVEMENT RECOMMENDATIONS -->\n      <div class=\"analysis-section improvement-recommendations\">\n        <h3>💡 Improvement Recommendations</h3>\n        <div class=\"recommendations-summary\">\n          <p>Specific language revisions and compliance recommendations:</p>\n        </div>\n\n        <div class=\"recommendations-list\">`;\n\n  structured.improvement_recommendations.forEach(recommendation => {\n    const priorityClass = `priority-${recommendation.priority}`;\n    const typeClass = `type-${recommendation.recommendation_type}`;\n\n    html += `\n          <div class=\"recommendation-item ${priorityClass} ${typeClass}\">\n            <div class=\"recommendation-header\">\n              <span class=\"clause-ref\">Clause ${recommendation.clause_reference}</span>\n              <span class=\"priority-badge ${recommendation.priority}\">\n                ${recommendation.priority.toUpperCase()}\n              </span>\n              <span class=\"type-badge ${recommendation.recommendation_type}\">\n                ${recommendation.recommendation_type.toUpperCase()}\n              </span>\n            </div>\n\n            <div class=\"recommendation-content\">\n              <div class=\"risk-score\">\n                <strong>Current Risk Score:</strong>\n                <span class=\"score\">${recommendation.current_risk_score}/100</span>\n              </div>\n\n              <div class=\"improved-language\">\n                <strong>Recommended Language:</strong>\n                <p>${recommendation.improved_language}</p>\n              </div>\n\n              <div class=\"benefits\">\n                <div class=\"risk-mitigation\">\n                  <strong>Risk Mitigation:</strong> ${recommendation.risk_mitigation}\n                </div>\n                <div class=\"business-benefit\">\n                  <strong>Business Benefit:</strong> ${recommendation.business_benefit}\n                </div>\n              </div>\n\n              <div class=\"implementation\">\n                <strong>Implementation Notes:</strong> ${recommendation.implementation_notes}\n              </div>\n            </div>\n          </div>`;\n  });\n\n  html += `\n        </div>\n      </div>\n\n      <!-- 4. SUMMARY METRICS -->\n      <div class=\"analysis-section summary-metrics\">\n        <h3>📊 Analysis Summary</h3>\n        <div class=\"metrics-grid\">\n          <div class=\"metric-card\">\n            <span class=\"metric-label\">Total Articles</span>\n            <span class=\"metric-value\">${structured.article_structure.length}</span>\n          </div>\n          <div class=\"metric-card\">\n            <span class=\"metric-label\">Deviations Found</span>\n            <span class=\"metric-value\">${structured.deviation_analysis.length}</span>\n          </div>\n          <div class=\"metric-card\">\n            <span class=\"metric-label\">Recommendations</span>\n            <span class=\"metric-value\">${structured.improvement_recommendations.length}</span>\n          </div>\n          <div class=\"metric-card\">\n            <span class=\"metric-label\">Compliance Score</span>\n            <span class=\"metric-value\">${analysisResult.compliance_score}%</span>\n          </div>\n        </div>\n      </div>\n    </div>`;\n\n  resultsContent.innerHTML = html;\n  resultsSection.style.display = \"block\";\n\n  // Show suggestions section if we have recommendations\n  if (structured.improvement_recommendations.length > 0) {\n    showStructuredSuggestionsSection(structured.improvement_recommendations);\n  }\n}\n\n// Show suggestions section for structured recommendations\nfunction showStructuredSuggestionsSection(recommendations) {\n  const suggestionsSection = document.getElementById(\"suggestions-section\");\n  const suggestionsContent = document.getElementById(\"suggestions-content\");\n\n  let html = `\n    <div class=\"structured-suggestions-header\">\n      <h3>🔧 Apply Recommended Changes</h3>\n      <p>Review and apply AI-recommended improvements to optimize your contract:</p>\n    </div>\n\n    <div class=\"structured-suggestions-list\">`;\n\n  recommendations.forEach((recommendation, index) => {\n    const priorityClass = `priority-${recommendation.priority}`;\n    const typeClass = `type-${recommendation.recommendation_type}`;\n\n    html += `\n      <div class=\"structured-suggestion-card ${priorityClass} ${typeClass}\">\n        <div class=\"suggestion-header\">\n          <span class=\"clause-ref\">Clause ${recommendation.clause_reference}</span>\n          <span class=\"priority-badge ${recommendation.priority}\">${recommendation.priority.toUpperCase()}</span>\n          <span class=\"type-badge ${recommendation.recommendation_type}\">${recommendation.recommendation_type.toUpperCase()}</span>\n        </div>\n        <div class=\"suggestion-content\">\n          <div class=\"risk-info\">\n            <strong>Current Risk Score:</strong> <span class=\"risk-score\">${recommendation.current_risk_score}/100</span>\n          </div>\n          <div class=\"improved-language\">\n            <strong>Recommended Language:</strong>\n            <p>${recommendation.improved_language}</p>\n          </div>\n          <div class=\"benefits\">\n            <p><strong>Business Benefit:</strong> ${recommendation.business_benefit}</p>\n          </div>\n        </div>\n        <div class=\"suggestion-actions\">\n          <button class=\"apply-structured-suggestion-btn\" onclick=\"applyStructuredSuggestion(${index})\">\n            Apply This Change\n          </button>\n        </div>\n      </div>`;\n  });\n\n  html += `\n    </div>\n\n    <div class=\"structured-suggestions-actions\">\n      <button id=\"apply-all-structured-changes-btn\" class=\"primary-button\" onclick=\"applyAllStructuredChanges()\">\n        Apply All Recommendations\n      </button>\n      <button id=\"dismiss-structured-suggestions-btn\" class=\"secondary-button\" onclick=\"dismissSuggestions()\">\n        Dismiss Suggestions\n      </button>\n    </div>`;\n\n  suggestionsContent.innerHTML = html;\n  suggestionsSection.style.display = \"block\";\n}\n\n// Display contract review results with revision workflow\nexport function displayContractReviewResults(reviewResults) {\n  const resultsContent = document.getElementById(\"results-content\");\n  const resultsSection = document.getElementById(\"results-section\");\n\n  const { acceptabilityStatus, complianceAnalysis, revisionPlan, nonAcceptableClauses } = reviewResults;\n\n  // Determine status styling\n  const statusClass = {\n    'ready-for-legal': 'status-success',\n    'minor-revisions': 'status-warning',\n    'major-revisions': 'status-error',\n    'not-acceptable': 'status-critical'\n  }[acceptabilityStatus.status] || 'status-info';\n\n  let html = `\n    <div class=\"contract-review-results\">\n      <!-- Overall Status Header -->\n      <div class=\"review-header\">\n        <h2>📋 Contract Review Results</h2>\n        <div class=\"acceptability-status ${statusClass}\">\n          <div class=\"status-indicator\">\n            <span class=\"status-icon\">${getStatusIcon(acceptabilityStatus.status)}</span>\n            <span class=\"status-text\">${acceptabilityStatus.message}</span>\n          </div>\n          <div class=\"status-metrics\">\n            <span class=\"metric\">\n              <strong>${acceptabilityStatus.acceptablePercentage}%</strong> Acceptable\n            </span>\n            <span class=\"metric\">\n              <strong>${acceptabilityStatus.problematicClauses}</strong> Issues Found\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <!-- Quick Actions -->\n      <div class=\"review-actions\">\n        ${generateActionButtons(acceptabilityStatus, revisionPlan)}\n      </div>\n\n      <!-- Compliance Overview -->\n      <div class=\"compliance-overview\">\n        <h3>📊 Compliance Analysis</h3>\n        <div class=\"compliance-grid\">\n          <div class=\"compliance-card acceptable\">\n            <div class=\"card-number\">${complianceAnalysis.acceptableClauses.length}</div>\n            <div class=\"card-label\">Acceptable Clauses</div>\n          </div>\n          <div class=\"compliance-card problematic\">\n            <div class=\"card-number\">${complianceAnalysis.problematicClauses.length}</div>\n            <div class=\"card-label\">Issues Found</div>\n          </div>\n          <div class=\"compliance-card missing\">\n            <div class=\"card-number\">${complianceAnalysis.missingClauses.length}</div>\n            <div class=\"card-label\">Missing Clauses</div>\n          </div>\n          <div class=\"compliance-card score\">\n            <div class=\"card-number\">${complianceAnalysis.overallScore}%</div>\n            <div class=\"card-label\">Compliance Score</div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Revision Plan -->\n      ${generateRevisionPlanSection(revisionPlan, nonAcceptableClauses)}\n\n      <!-- Next Steps -->\n      <div class=\"next-steps-section\">\n        <h3>📝 Next Steps</h3>\n        <ol class=\"next-steps-list\">\n          ${acceptabilityStatus.nextSteps.map(step => `<li>${step}</li>`).join('')}\n        </ol>\n      </div>\n\n      <!-- Detailed Issues (Collapsible) -->\n      <div class=\"detailed-issues\">\n        <h3>🔍 Detailed Analysis</h3>\n        <div class=\"issues-accordion\">\n          ${generateDetailedIssuesSection(complianceAnalysis)}\n        </div>\n      </div>\n    </div>`;\n\n  resultsContent.innerHTML = html;\n  resultsSection.style.display = \"block\";\n\n  // Add event listeners for interactive elements\n  addReviewEventListeners(reviewResults);\n}\n\nfunction getStatusIcon(status) {\n  const icons = {\n    'ready-for-legal': '✅',\n    'minor-revisions': '⚠️',\n    'major-revisions': '🔧',\n    'not-acceptable': '❌'\n  };\n  return icons[status] || '📋';\n}\n\nfunction generateActionButtons(acceptabilityStatus, revisionPlan) {\n  let buttons = '';\n\n  if (acceptabilityStatus.status === 'ready-for-legal') {\n    buttons = `\n      <button class=\"primary-button\" onclick=\"submitToLegal()\">\n        📤 Submit to Legal Review\n      </button>\n      <button class=\"secondary-button\" onclick=\"generateContractSummary()\">\n        📄 Generate Summary\n      </button>`;\n  } else if (revisionPlan.totalRevisions > 0) {\n    const autoReplaceable = revisionPlan.revisions.filter(r => r.autoReplaceable).length;\n\n    buttons = `\n      <button class=\"primary-button\" onclick=\"applyAutomaticRevisions()\" ${autoReplaceable === 0 ? 'disabled' : ''}>\n        🔧 Apply ${autoReplaceable} Automatic Revisions\n      </button>\n      <button class=\"secondary-button\" onclick=\"reviewManualChanges()\">\n        👁️ Review Manual Changes (${revisionPlan.totalRevisions - autoReplaceable})\n      </button>\n      <button class=\"tertiary-button\" onclick=\"rerunAnalysis()\">\n        🔄 Re-run Analysis\n      </button>`;\n  }\n\n  return buttons;\n}\n\nfunction generateRevisionPlanSection(revisionPlan, nonAcceptableClauses) {\n  if (revisionPlan.totalRevisions === 0) {\n    return `\n      <div class=\"revision-plan-section\">\n        <h3>✅ No Revisions Needed</h3>\n        <p>All clauses meet the required standards.</p>\n      </div>`;\n  }\n\n  const highPriority = revisionPlan.revisions.filter(r => r.priority === 'high');\n  const mediumPriority = revisionPlan.revisions.filter(r => r.priority === 'medium');\n  const lowPriority = revisionPlan.revisions.filter(r => r.priority === 'low');\n\n  return `\n    <div class=\"revision-plan-section\">\n      <h3>🔧 Revision Plan (${revisionPlan.totalRevisions} items)</h3>\n\n      ${highPriority.length > 0 ? `\n        <div class=\"priority-group high-priority\">\n          <h4>🚨 High Priority (${highPriority.length})</h4>\n          <div class=\"revision-items\">\n            ${highPriority.map(revision => generateRevisionItem(revision)).join('')}\n          </div>\n        </div>` : ''}\n\n      ${mediumPriority.length > 0 ? `\n        <div class=\"priority-group medium-priority\">\n          <h4>⚠️ Medium Priority (${mediumPriority.length})</h4>\n          <div class=\"revision-items\">\n            ${mediumPriority.map(revision => generateRevisionItem(revision)).join('')}\n          </div>\n        </div>` : ''}\n\n      ${lowPriority.length > 0 ? `\n        <div class=\"priority-group low-priority\">\n          <h4>ℹ️ Low Priority (${lowPriority.length})</h4>\n          <div class=\"revision-items\">\n            ${lowPriority.map(revision => generateRevisionItem(revision)).join('')}\n          </div>\n        </div>` : ''}\n    </div>`;\n}\n\nfunction generateRevisionItem(revision) {\n  const actionIcon = {\n    'replace': '🔄',\n    'revise': '✏️',\n    'review': '👁️'\n  }[revision.recommendedAction] || '📝';\n\n  return `\n    <div class=\"revision-item\" data-clause-id=\"${revision.clauseId}\">\n      <div class=\"revision-header\">\n        <span class=\"revision-icon\">${actionIcon}</span>\n        <span class=\"clause-id\">Clause ${revision.clauseId}</span>\n        <span class=\"revision-action\">${revision.recommendedAction.toUpperCase()}</span>\n        ${revision.autoReplaceable ? '<span class=\"auto-badge\">AUTO</span>' : '<span class=\"manual-badge\">MANUAL</span>'}\n      </div>\n      <div class=\"revision-content\">\n        <div class=\"current-text\">\n          <strong>Current:</strong> ${revision.currentText.substring(0, 100)}...\n        </div>\n        ${revision.replacementOptions.length > 0 ? `\n          <div class=\"replacement-options\">\n            <strong>Recommended:</strong> ${revision.replacementOptions[0].content.substring(0, 100)}...\n          </div>` : ''}\n        <div class=\"revision-issues\">\n          <strong>Issues:</strong> ${revision.issues.map(issue => issue.description).join(', ')}\n        </div>\n      </div>\n      <div class=\"revision-actions\">\n        ${revision.autoReplaceable ?\n          `<button class=\"mini-button primary\" onclick=\"applyRevision('${revision.clauseId}')\">Apply</button>` :\n          `<button class=\"mini-button secondary\" onclick=\"reviewRevision('${revision.clauseId}')\">Review</button>`\n        }\n        <button class=\"mini-button tertiary\" onclick=\"viewDetails('${revision.clauseId}')\">Details</button>\n      </div>\n    </div>`;\n}\n\nfunction generateDetailedIssuesSection(complianceAnalysis) {\n  return `\n    <div class=\"accordion-item\">\n      <div class=\"accordion-header\" onclick=\"toggleAccordion('problematic-clauses')\">\n        <span>❌ Problematic Clauses (${complianceAnalysis.problematicClauses.length})</span>\n        <span class=\"accordion-icon\">▼</span>\n      </div>\n      <div class=\"accordion-content\" id=\"problematic-clauses\">\n        ${complianceAnalysis.problematicClauses.map(clause => `\n          <div class=\"issue-item\">\n            <strong>Clause ${clause.clauseId}:</strong> ${clause.issues.map(issue => issue.description).join(', ')}\n          </div>\n        `).join('')}\n      </div>\n    </div>\n\n    <div class=\"accordion-item\">\n      <div class=\"accordion-header\" onclick=\"toggleAccordion('missing-clauses')\">\n        <span>➕ Missing Clauses (${complianceAnalysis.missingClauses.length})</span>\n        <span class=\"accordion-icon\">▼</span>\n      </div>\n      <div class=\"accordion-content\" id=\"missing-clauses\">\n        ${complianceAnalysis.missingClauses.map(clause => `\n          <div class=\"issue-item\">\n            <strong>${clause.title}:</strong> ${clause.content.substring(0, 100)}...\n          </div>\n        `).join('')}\n      </div>\n    </div>`;\n}\n\nfunction addReviewEventListeners(reviewResults) {\n  // Store review results globally for access by event handlers\n  window.currentReviewResults = reviewResults;\n\n  // Add accordion functionality\n  window.toggleAccordion = function(id) {\n    const content = document.getElementById(id);\n    const header = content.previousElementSibling;\n    const icon = header.querySelector('.accordion-icon');\n\n    if (content.style.display === 'none' || !content.style.display) {\n      content.style.display = 'block';\n      icon.textContent = '▲';\n    } else {\n      content.style.display = 'none';\n      icon.textContent = '▼';\n    }\n  };\n}\n"],"names":["displayCombinedAnalysisResults","analysisResult","riskAnalysis","changeSuggestions","summaryResult","resultsContent","document","getElementById","resultsSection","structure","contract_structure","modifiedClauses","articles","reduce","count","article","clauses","filter","clause","_clause$changeStatus","changeStatus","isModified","length","totalClauses","html","concat","forEach","number","title","_clause$changeStatus2","_clause$changeStatus3","statusClass","statusColor","text","substring","trackChanges","enabled","note","demoMode","overview","contract_type","word_count","compliance_score","risk_score","summary","risks","risk","severityClass","severity","toUpperCase","description","suggestion","suggestions","priorityClass","priority","current","suggested","benefit","key_terms","term","recommendations","rec","innerHTML","style","display","showSuggestionsSection","suggestionsSection","suggestionsContent","index","displayContractResults","result","_result$metadata","_result$metadata2","metadata","template_used","Date","generated_at","toLocaleString","displayStructuredAnalysisResults","structured_analysis","structured","analysis_timestamp","ai_prompt_used","article_structure","content","line_number","deviation_analysis","deviation","negotiable_status","riskClass","risk_level","clause_reference","clause_title","deviation_description","current_language","standard_language","business_impact","improvement_recommendations","recommendation","typeClass","recommendation_type","current_risk_score","improved_language","risk_mitigation","business_benefit","implementation_notes","showStructuredSuggestionsSection","console","log","displayContractReviewResults","reviewResults","status","acceptabilityStatus","complianceAnalysis","revisionPlan","nonAcceptableClauses","message","acceptablePercentage","problematicClauses","buttons","totalRevisions","autoReplaceable","revisions","r","generateActionButtons","acceptableClauses","missingClauses","overallScore","highPriority","mediumPriority","lowPriority","map","revision","generateRevisionItem","join","generateRevisionPlanSection","nextSteps","step","clauseId","issues","issue","generateDetailedIssuesSection","window","currentReviewResults","toggleAccordion","id","icon","previousElementSibling","querySelector","textContent","addReviewEventListeners","actionIcon","recommendedAction","currentText","replacementOptions"],"sourceRoot":""}