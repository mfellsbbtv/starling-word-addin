{"version":3,"file":"523.js","mappings":"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","sources":["webpack://starling-word-addin/./src/taskpane/services/contract-generator.js"],"sourcesContent":["// Contract Generation Service\nimport { updateStatus, showProgressSection, hideProgressSection, handleError } from '../../shared/utils.js';\n\n// Form field definitions for different agreement types\nexport const FORM_TEMPLATES = {\n  'content-management': {\n    'music': [\n      { name: 'entity_name', label: 'Entity Name', type: 'text', required: true, description: 'Name of the contracting entity' },\n      { name: 'content_creator', label: 'Content Creator', type: 'text', required: true, description: 'Name of the content creator/artist' },\n      { name: 'scope_description', label: 'Scope of Work', type: 'textarea', required: true, description: 'Detailed description of content management services' },\n      { name: 'revenue_split', label: 'Revenue Split (%)', type: 'number', required: true, description: 'Percentage split for revenue sharing' },\n      { name: 'term_length', label: 'Contract Term', type: 'select', required: true, options: ['1 year', '2 years', '3 years', '5 years'], description: 'Duration of the agreement' },\n      { name: 'territory', label: 'Territory', type: 'select', required: true, options: ['Worldwide', 'North America', 'United States', 'Canada', 'Other'], description: 'Geographic scope of the agreement' },\n      { name: 'music_rights', label: 'Music Rights', type: 'select', required: true, options: ['Master Rights', 'Publishing Rights', 'Both', 'Synchronization Only'], description: 'Type of music rights being managed' },\n      { name: 'advance_amount', label: 'Advance Amount ($)', type: 'number', required: false, description: 'Initial advance payment (if applicable)' },\n      { name: 'termination_notice', label: 'Termination Notice (days)', type: 'number', required: true, description: 'Notice period required for termination' }\n    ],\n    'non-music': [\n      { name: 'entity_name', label: 'Entity Name', type: 'text', required: true, description: 'Name of the contracting entity' },\n      { name: 'content_creator', label: 'Content Creator', type: 'text', required: true, description: 'Name of the content creator' },\n      { name: 'scope_description', label: 'Scope of Work', type: 'textarea', required: true, description: 'Detailed description of content management services' },\n      { name: 'revenue_split', label: 'Revenue Split (%)', type: 'number', required: true, description: 'Percentage split for revenue sharing' },\n      { name: 'term_length', label: 'Contract Term', type: 'select', required: true, options: ['1 year', '2 years', '3 years', '5 years'], description: 'Duration of the agreement' },\n      { name: 'territory', label: 'Territory', type: 'select', required: true, options: ['Worldwide', 'North America', 'United States', 'Canada', 'Other'], description: 'Geographic scope of the agreement' },\n      { name: 'content_type', label: 'Content Type', type: 'select', required: true, options: ['Video Content', 'Podcast', 'Written Content', 'Social Media', 'Mixed Media'], description: 'Type of content being managed' },\n      { name: 'platform_focus', label: 'Platform Focus', type: 'select', required: true, options: ['YouTube', 'TikTok', 'Instagram', 'Multi-Platform', 'Other'], description: 'Primary platform for content distribution' },\n      { name: 'termination_notice', label: 'Termination Notice (days)', type: 'number', required: true, description: 'Notice period required for termination' }\n    ],\n    'both': [\n      { name: 'entity_name', label: 'Entity Name', type: 'text', required: true, description: 'Name of the contracting entity' },\n      { name: 'content_creator', label: 'Content Creator', type: 'text', required: true, description: 'Name of the content creator/artist' },\n      { name: 'scope_description', label: 'Scope of Work', type: 'textarea', required: true, description: 'Detailed description of content management services' },\n      { name: 'revenue_split_music', label: 'Music Revenue Split (%)', type: 'number', required: true, description: 'Percentage split for music revenue' },\n      { name: 'revenue_split_content', label: 'Content Revenue Split (%)', type: 'number', required: true, description: 'Percentage split for non-music content revenue' },\n      { name: 'term_length', label: 'Contract Term', type: 'select', required: true, options: ['1 year', '2 years', '3 years', '5 years'], description: 'Duration of the agreement' },\n      { name: 'territory', label: 'Territory', type: 'select', required: true, options: ['Worldwide', 'North America', 'United States', 'Canada', 'Other'], description: 'Geographic scope of the agreement' },\n      { name: 'music_rights', label: 'Music Rights', type: 'select', required: true, options: ['Master Rights', 'Publishing Rights', 'Both', 'Synchronization Only'], description: 'Type of music rights being managed' },\n      { name: 'content_platforms', label: 'Content Platforms', type: 'select', required: true, options: ['YouTube', 'TikTok', 'Instagram', 'Multi-Platform', 'Other'], description: 'Primary platforms for content distribution' },\n      { name: 'termination_notice', label: 'Termination Notice (days)', type: 'number', required: true, description: 'Notice period required for termination' }\n    ]\n  }\n};\n\n// Handle agreement type selection\nexport function handleAgreementTypeChange() {\n  const agreementType = document.getElementById(\"agreement-type\").value;\n  const contentTypeGroup = document.getElementById(\"content-type-group\");\n  const dynamicForm = document.getElementById(\"dynamic-form\");\n  const generateButtonGroup = document.getElementById(\"generate-button-group\");\n  \n  if (agreementType) {\n    contentTypeGroup.style.display = \"block\";\n    // Reset content type selection\n    document.getElementById(\"content-type\").value = \"\";\n    dynamicForm.style.display = \"none\";\n    generateButtonGroup.style.display = \"none\";\n  } else {\n    contentTypeGroup.style.display = \"none\";\n    dynamicForm.style.display = \"none\";\n    generateButtonGroup.style.display = \"none\";\n  }\n}\n\n// Handle content type selection\nexport function handleContentTypeChange() {\n  const agreementType = document.getElementById(\"agreement-type\").value;\n  const contentType = document.getElementById(\"content-type\").value;\n  const dynamicForm = document.getElementById(\"dynamic-form\");\n  const generateButtonGroup = document.getElementById(\"generate-button-group\");\n  \n  if (agreementType && contentType) {\n    generateDynamicForm(agreementType, contentType);\n    dynamicForm.style.display = \"block\";\n    generateButtonGroup.style.display = \"block\";\n  } else {\n    dynamicForm.style.display = \"none\";\n    generateButtonGroup.style.display = \"none\";\n  }\n}\n\n// Generate dynamic form based on selections\nexport function generateDynamicForm(agreementType, contentType) {\n  const dynamicForm = document.getElementById(\"dynamic-form\");\n  const template = FORM_TEMPLATES[agreementType]?.[contentType];\n  \n  if (!template) {\n    dynamicForm.innerHTML = '<p class=\"ms-font-s\">Form template not available for this combination.</p>';\n    return;\n  }\n  \n  let formHTML = '<h3 class=\"ms-font-l\">Contract Details</h3>';\n  \n  template.forEach(field => {\n    const requiredClass = field.required ? 'required-field' : '';\n    const requiredAttr = field.required ? 'required' : '';\n    \n    formHTML += `<div class=\"form-field ${requiredClass}\">`;\n    formHTML += `<label for=\"${field.name}\">${field.label}:</label>`;\n    \n    if (field.type === 'textarea') {\n      formHTML += `<textarea id=\"${field.name}\" name=\"${field.name}\" ${requiredAttr} placeholder=\"Enter ${field.label.toLowerCase()}\"></textarea>`;\n    } else if (field.type === 'select') {\n      formHTML += `<select id=\"${field.name}\" name=\"${field.name}\" ${requiredAttr}>`;\n      formHTML += `<option value=\"\">Select ${field.label}</option>`;\n      field.options.forEach(option => {\n        formHTML += `<option value=\"${option}\">${option}</option>`;\n      });\n      formHTML += `</select>`;\n    } else {\n      const inputType = field.type === 'number' ? 'number' : 'text';\n      formHTML += `<input type=\"${inputType}\" id=\"${field.name}\" name=\"${field.name}\" ${requiredAttr} placeholder=\"Enter ${field.label.toLowerCase()}\">`;\n    }\n    \n    if (field.description) {\n      formHTML += `<div class=\"field-description\">${field.description}</div>`;\n    }\n    \n    formHTML += `</div>`;\n  });\n  \n  dynamicForm.innerHTML = formHTML;\n}\n\n// Update contract preview with next contract details\nexport function updateContractPreview() {\n  const previewData = getNextContractPreview();\n\n  document.getElementById(\"preview-type\").textContent = previewData.type;\n  document.getElementById(\"preview-parties\").textContent = previewData.parties;\n  document.getElementById(\"preview-scope\").textContent = previewData.scope;\n}\n\n// Get preview data for the next contract to be generated\nfunction getNextContractPreview() {\n  const previews = [\n    {\n      type: \"Music Content Management Agreement\",\n      parties: \"Starling Music Management & Alex Rivera\",\n      scope: \"Digital distribution, rights management, and marketing\"\n    },\n    {\n      type: \"Video Content Management Agreement\",\n      parties: \"Digital Content Partners & Jordan Smith\",\n      scope: \"YouTube optimization and brand partnerships\"\n    },\n    {\n      type: \"Music Licensing Agreement\",\n      parties: \"Harmony Licensing Group & Taylor Music Productions\",\n      scope: \"Synchronization rights for film and television\"\n    }\n  ];\n\n  // Return a random preview to match the random contract generation\n  return previews[Math.floor(Math.random() * previews.length)];\n}\n\n// Collect form data - simplified for demo\nexport function collectFormData() {\n  // Since form fields are hidden, use varied demo values for more realistic contracts\n  const demoVariations = [\n    {\n      agreement_type: 'content-management',\n      content_type: 'music',\n      fields: {\n        entity_name: 'Starling Music Management LLC',\n        content_creator: 'Alex Rivera',\n        scope_description: 'Comprehensive music content management including digital distribution across all major platforms, rights management, marketing campaigns, and revenue collection services.',\n        revenue_split: '20',\n        term_length: '3 years',\n        territory: 'Worldwide',\n        music_rights: 'Master Rights',\n        advance_amount: '15000',\n        termination_notice: '60'\n      }\n    },\n    {\n      agreement_type: 'content-management',\n      content_type: 'non-music',\n      fields: {\n        entity_name: 'Digital Content Partners',\n        content_creator: 'Jordan Smith',\n        scope_description: 'Full-service content management for video content including YouTube optimization, brand partnerships, content strategy, and monetization.',\n        revenue_split: '25',\n        term_length: '2 years',\n        territory: 'North America',\n        content_type: 'Video Content',\n        platform_focus: 'YouTube',\n        termination_notice: '30'\n      }\n    },\n    {\n      agreement_type: 'licensing',\n      content_type: 'music',\n      fields: {\n        entity_name: 'Harmony Licensing Group',\n        content_creator: 'Taylor Music Productions',\n        scope_description: 'Licensing agreement for synchronization rights in film, television, and digital media.',\n        license_fee: '5000',\n        term_length: '5 years',\n        territory: 'Worldwide',\n        music_rights: 'Synchronization Rights',\n        termination_notice: '90'\n      }\n    }\n  ];\n\n  // Randomly select a demo variation for variety\n  const selectedDemo = demoVariations[Math.floor(Math.random() * demoVariations.length)];\n  return selectedDemo;\n}\n\n// Validate form data - simplified for demo\nexport function validateFormData(formData) {\n  // Since we're using default demo values, validation always passes\n  return true;\n}\n"],"names":["FORM_TEMPLATES","name","label","type","required","description","options","handleAgreementTypeChange","agreementType","document","getElementById","value","contentTypeGroup","dynamicForm","generateButtonGroup","style","display","handleContentTypeChange","contentType","generateDynamicForm","_FORM_TEMPLATES$agree","template","formHTML","forEach","field","requiredClass","requiredAttr","concat","toLowerCase","option","inputType","innerHTML","updateContractPreview","previews","previewData","parties","scope","Math","floor","random","length","textContent","collectFormData","demoVariations","agreement_type","content_type","fields","entity_name","content_creator","scope_description","revenue_split","term_length","territory","music_rights","advance_amount","termination_notice","platform_focus","license_fee","validateFormData","formData"],"sourceRoot":""}