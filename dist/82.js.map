{"version":3,"file":"82.js","mappings":"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","sources":["webpack://starling-word-addin/./src/taskpane/services/contract-analyzer.js","webpack://starling-word-addin/./src/shared/config.js"],"sourcesContent":["// Contract Analysis Service\nimport { updateStatus, showProgressSection, hideProgressSection, handleError, setButtonLoading } from '../../shared/utils.js';\nimport { AI_PROMPTS } from '../../shared/config.js';\n\n// Analyze track changes in the document\nexport async function analyzeTrackChanges() {\n  try {\n    // Ensure Word API is available\n    if (typeof Word === 'undefined') {\n      throw new Error('Word API not available. Please ensure you are running this add-in in Microsoft Word.');\n    }\n\n    // Additional check for Office.js initialization\n    if (!Office.context || !Office.context.document) {\n      throw new Error('Office.js not properly initialized. Please refresh the add-in.');\n    }\n\n    return await Word.run(async (context) => {\n      const body = context.document.body;\n      const revisions = context.document.revisions;\n\n      // Load revisions and their properties\n      revisions.load(\"items\");\n      body.load(\"text\");\n\n      await context.sync();\n\n      const changeData = {\n        hasChanges: revisions.items.length > 0,\n        totalRevisions: revisions.items.length,\n        revisions: []\n      };\n\n      // Analyze each revision\n      for (let i = 0; i < revisions.items.length; i++) {\n        const revision = revisions.items[i];\n        revision.load([\"range\", \"type\", \"author\", \"date\"]);\n        await context.sync();\n\n        revision.range.load([\"text\", \"start\", \"end\"]);\n        await context.sync();\n\n        changeData.revisions.push({\n          type: revision.type,\n          text: revision.range.text,\n          author: revision.author,\n          date: revision.date,\n          start: revision.range.start,\n          end: revision.range.end\n        });\n      }\n\n      return changeData;\n    });\n  } catch (error) {\n    console.error(\"Error analyzing track changes:\", error);\n    return { hasChanges: false, totalRevisions: 0, revisions: [] };\n  }\n}\n\n// Check if a specific text range has been modified\nexport async function checkClauseModifications(clauseText, startPosition) {\n  try {\n    // Ensure Word API is available\n    if (typeof Word === 'undefined') {\n      throw new Error('Word API not available. Please ensure you are running this add-in in Microsoft Word.');\n    }\n\n    // Additional check for Office.js initialization\n    if (!Office.context || !Office.context.document) {\n      throw new Error('Office.js not properly initialized. Please refresh the add-in.');\n    }\n\n    return await Word.run(async (context) => {\n      const body = context.document.body;\n      const searchResults = body.search(clauseText, { matchCase: false, matchWholeWord: false });\n      searchResults.load([\"items\"]);\n\n      await context.sync();\n\n      if (searchResults.items.length === 0) {\n        return { isModified: false, hasChanges: false };\n      }\n\n      const range = searchResults.items[0];\n      range.load([\"start\", \"end\", \"text\"]);\n      await context.sync();\n\n      // Check for revisions in this range\n      const revisions = context.document.revisions;\n      revisions.load(\"items\");\n      await context.sync();\n\n      let hasModifications = false;\n      const modifications = [];\n\n      for (let i = 0; i < revisions.items.length; i++) {\n        const revision = revisions.items[i];\n        revision.load([\"range\", \"type\", \"author\", \"date\"]);\n        await context.sync();\n\n        revision.range.load([\"start\", \"end\", \"text\"]);\n        await context.sync();\n\n        // Check if revision overlaps with our clause range\n        if (revision.range.start >= range.start && revision.range.end <= range.end) {\n          hasModifications = true;\n          modifications.push({\n            type: revision.type,\n            text: revision.range.text,\n            author: revision.author,\n            date: revision.date\n          });\n        }\n      }\n\n      return {\n        isModified: hasModifications,\n        hasChanges: hasModifications,\n        modifications: modifications,\n        originalText: clauseText,\n        currentText: range.text\n      };\n    });\n  } catch (error) {\n    console.error(\"Error checking clause modifications:\", error);\n    return { isModified: false, hasChanges: false };\n  }\n}\n\n// Generate demo analysis following the new AI prompt structure\nexport async function generateDemoAnalysis(documentText) {\n  console.log(\"Generating analysis using new AI prompt structure...\");\n\n  const wordCount = documentText.split(/\\s+/).length;\n  const hasSignatureLines = documentText.includes('_______') || documentText.includes('DATE:');\n  const hasParties = documentText.toLowerCase().includes('party') || documentText.toLowerCase().includes('agreement');\n  const hasTermination = documentText.toLowerCase().includes('termination') || documentText.toLowerCase().includes('terminate');\n  const hasCompensation = documentText.toLowerCase().includes('fee') || documentText.toLowerCase().includes('payment') || documentText.toLowerCase().includes('compensation');\n\n  // Simulate AI prompt processing\n  console.log(\"AI Prompt System Message:\", AI_PROMPTS.contractReview.systemPrompt.substring(0, 100) + \"...\");\n\n  // Determine contract type based on content\n  let contractType = \"General Agreement\";\n  if (documentText.toLowerCase().includes('content management')) {\n    contractType = \"Content Management Agreement\";\n  } else if (documentText.toLowerCase().includes('licensing')) {\n    contractType = \"Licensing Agreement\";\n  } else if (documentText.toLowerCase().includes('distribution')) {\n    contractType = \"Distribution Agreement\";\n  } else if (documentText.toLowerCase().includes('talent')) {\n    contractType = \"Talent Agreement\";\n  }\n\n  // Calculate a demo compliance score\n  let complianceScore = 70; // Base score\n  if (hasSignatureLines) complianceScore += 10;\n  if (hasParties) complianceScore += 10;\n  if (hasTermination) complianceScore += 5;\n  if (hasCompensation) complianceScore += 5;\n\n  // Generate risk assessment\n  const risks = [];\n  if (!hasTermination) {\n    risks.push(\"Missing termination clause - consider adding clear termination conditions\");\n  }\n  if (!hasCompensation) {\n    risks.push(\"Compensation terms unclear - ensure payment terms are explicitly defined\");\n  }\n  if (wordCount < 100) {\n    risks.push(\"Contract appears incomplete - consider adding more detailed terms\");\n  }\n\n  // Generate structured analysis following the new AI prompt format\n  const structuredAnalysis = await generateStructuredAnalysis(documentText, contractType);\n\n  return {\n    contract_type: contractType,\n    word_count: wordCount,\n    compliance_score: Math.min(complianceScore, 100),\n    summary: `This ${contractType.toLowerCase()} contains ${wordCount} words and appears to be ${complianceScore >= 80 ? 'well-structured' : 'missing some standard clauses'}. ${risks.length > 0 ? 'Several areas need attention.' : 'The contract structure looks good.'}`,\n    risks: risks,\n    key_terms: extractKeyTerms(documentText),\n    recommendations: generateRecommendations(risks.length, hasSignatureLines, hasTermination),\n    structured_analysis: structuredAnalysis, // New structured analysis following AI prompt format\n    contract_structure: await parseContractStructureWithChanges(documentText) // Keep existing structure for compatibility\n  };\n}\n\n// Generate structured analysis following the new AI prompt requirements\nasync function generateStructuredAnalysis(documentText, contractType) {\n  console.log(\"Generating structured analysis per AI prompt requirements...\");\n\n  // Step 1: Extract and number articles and clauses\n  const articleStructure = extractArticlesAndClauses(documentText);\n\n  // Step 2: Compare against standard library (simulated)\n  const deviationAnalysis = compareAgainstStandardLibrary(articleStructure, contractType);\n\n  // Step 3: Generate improvement recommendations\n  const improvementRecommendations = generateImprovementRecommendations(deviationAnalysis);\n\n  return {\n    article_structure: articleStructure,\n    deviation_analysis: deviationAnalysis,\n    improvement_recommendations: improvementRecommendations,\n    ai_prompt_used: \"contractReview\",\n    analysis_timestamp: new Date().toISOString()\n  };\n}\n\nexport function extractKeyTerms(text) {\n  const terms = [];\n  const lowerText = text.toLowerCase();\n\n  if (lowerText.includes('term') || lowerText.includes('duration')) {\n    terms.push(\"Contract Duration\");\n  }\n  if (lowerText.includes('fee') || lowerText.includes('payment')) {\n    terms.push(\"Payment Terms\");\n  }\n  if (lowerText.includes('territory') || lowerText.includes('worldwide')) {\n    terms.push(\"Geographic Scope\");\n  }\n  if (lowerText.includes('intellectual property') || lowerText.includes('rights')) {\n    terms.push(\"Rights Management\");\n  }\n\n  return terms.length > 0 ? terms : [\"Standard Contract Terms\"];\n}\n\nexport function generateRecommendations(riskCount, hasSignatures, hasTermination) {\n  const recommendations = [];\n\n  if (riskCount > 2) {\n    recommendations.push(\"Consider legal review before execution\");\n  }\n  if (!hasSignatures) {\n    recommendations.push(\"Add proper signature blocks and date fields\");\n  }\n  if (!hasTermination) {\n    recommendations.push(\"Include clear termination and dispute resolution clauses\");\n  }\n\n  recommendations.push(\"Ensure all parties review terms carefully\");\n  recommendations.push(\"Consider adding governing law and jurisdiction clauses\");\n\n  return recommendations;\n}\n\n// Risk Analysis Functions\nexport function generateRiskAnalysis(documentText) {\n  const risks = [];\n  const lowerText = documentText.toLowerCase();\n\n  // Check for missing critical clauses\n  if (!lowerText.includes('termination') && !lowerText.includes('terminate')) {\n    risks.push({\n      severity: 'high',\n      category: 'Missing Clause',\n      title: 'No Termination Clause',\n      description: 'Contract lacks clear termination conditions and procedures.',\n      location: 'Document-wide',\n      suggestion: 'Add a comprehensive termination clause specifying conditions, notice periods, and post-termination obligations.'\n    });\n  }\n\n  if (!lowerText.includes('liability') && !lowerText.includes('damages')) {\n    risks.push({\n      severity: 'critical',\n      category: 'Legal Risk',\n      title: 'No Liability Limitation',\n      description: 'Contract does not address liability limitations or damage caps.',\n      location: 'Document-wide',\n      suggestion: 'Include liability limitation clauses to protect against excessive damages.'\n    });\n  }\n\n  if (!lowerText.includes('dispute') && !lowerText.includes('arbitration') && !lowerText.includes('jurisdiction')) {\n    risks.push({\n      severity: 'medium',\n      category: 'Dispute Resolution',\n      title: 'No Dispute Resolution Mechanism',\n      description: 'Contract lacks clear dispute resolution procedures.',\n      location: 'Document-wide',\n      suggestion: 'Add dispute resolution clause specifying arbitration, mediation, or court jurisdiction.'\n    });\n  }\n\n  if (!lowerText.includes('confidential') && !lowerText.includes('proprietary')) {\n    risks.push({\n      severity: 'medium',\n      category: 'IP Protection',\n      title: 'No Confidentiality Provisions',\n      description: 'Contract may not adequately protect confidential information.',\n      location: 'Document-wide',\n      suggestion: 'Include confidentiality and non-disclosure provisions.'\n    });\n  }\n\n  if (!lowerText.includes('force majeure') && !lowerText.includes('act of god')) {\n    risks.push({\n      severity: 'low',\n      category: 'Risk Management',\n      title: 'No Force Majeure Clause',\n      description: 'Contract lacks protection against unforeseeable circumstances.',\n      location: 'Document-wide',\n      suggestion: 'Consider adding force majeure clause for protection against extraordinary events.'\n    });\n  }\n\n  return {\n    total_risks: risks.length,\n    risk_score: calculateRiskScore(risks),\n    risks: risks,\n    summary: `Found ${risks.length} potential risk areas. ${risks.filter(r => r.severity === 'critical').length} critical, ${risks.filter(r => r.severity === 'high').length} high, ${risks.filter(r => r.severity === 'medium').length} medium, ${risks.filter(r => r.severity === 'low').length} low priority issues.`\n  };\n}\n\nfunction calculateRiskScore(risks) {\n  let score = 100;\n  risks.forEach(risk => {\n    switch(risk.severity) {\n      case 'critical': score -= 25; break;\n      case 'high': score -= 15; break;\n      case 'medium': score -= 10; break;\n      case 'low': score -= 5; break;\n    }\n  });\n  return Math.max(score, 0);\n}\n\n// Change Suggestions Functions\nexport function generateChangeSuggestions(documentText) {\n  const suggestions = [];\n  const lowerText = documentText.toLowerCase();\n\n  // Analyze contract structure and suggest improvements\n  if (lowerText.includes('shall') && !lowerText.includes('may')) {\n    suggestions.push({\n      type: 'Language Improvement',\n      priority: 'medium',\n      title: 'Balance Mandatory vs Optional Language',\n      current: 'Contract uses only mandatory \"shall\" language',\n      suggested: 'Consider using \"may\" for optional provisions to provide flexibility',\n      benefit: 'Provides better balance between obligations and flexibility'\n    });\n  }\n\n  if (!lowerText.includes('including but not limited to') && !lowerText.includes('such as')) {\n    suggestions.push({\n      type: 'Clarity Enhancement',\n      priority: 'low',\n      title: 'Add Inclusive Language',\n      current: 'Lists may appear exhaustive',\n      suggested: 'Add \"including but not limited to\" before lists to indicate they are not exhaustive',\n      benefit: 'Prevents interpretation that lists are complete and exclusive'\n    });\n  }\n\n  if (lowerText.includes('reasonable') && !lowerText.includes('commercially reasonable')) {\n    suggestions.push({\n      type: 'Legal Precision',\n      priority: 'medium',\n      title: 'Clarify \"Reasonable\" Standards',\n      current: 'Uses vague \"reasonable\" standard',\n      suggested: 'Replace with \"commercially reasonable\" or define specific criteria',\n      benefit: 'Reduces ambiguity and potential disputes over reasonableness'\n    });\n  }\n\n  if (!lowerText.includes('time is of the essence')) {\n    suggestions.push({\n      type: 'Performance Standards',\n      priority: 'low',\n      title: 'Add Time Performance Clause',\n      current: 'No explicit time performance requirements',\n      suggested: 'Add \"time is of the essence\" clause for critical deadlines',\n      benefit: 'Emphasizes importance of meeting deadlines and strengthens enforcement'\n    });\n  }\n\n  suggestions.push({\n    type: 'Modern Practice',\n    priority: 'low',\n    title: 'Electronic Signature Provision',\n    current: 'Traditional signature requirements',\n    suggested: 'Add electronic signature acceptance clause',\n    benefit: 'Enables faster execution and modern business practices'\n  });\n\n  return {\n    total_suggestions: suggestions.length,\n    suggestions: suggestions,\n    summary: `Generated ${suggestions.length} improvement suggestions to enhance contract clarity, enforceability, and modern business practices.`\n  };\n}\n\n// Extract articles and clauses with proper numbering (1, 1.1, 1.1.1, 2, 2.1, etc.)\nfunction extractArticlesAndClauses(documentText) {\n  console.log(\"Extracting articles and clauses with structured numbering...\");\n\n  const lines = documentText.split('\\n').filter(line => line.trim().length > 0);\n  const structure = [];\n  let currentArticle = 0;\n  let currentClause = 0;\n\n  // Simulate article/clause detection (in real implementation, this would use NLP)\n  const articleKeywords = ['article', 'section', 'clause', 'term', 'provision'];\n  const clauseKeywords = ['shall', 'will', 'must', 'agrees', 'obligations'];\n\n  lines.forEach((line, index) => {\n    const lowerLine = line.toLowerCase();\n    const isArticleHeader = articleKeywords.some(keyword =>\n      lowerLine.includes(keyword) && line.length < 100\n    );\n\n    if (isArticleHeader || (index % 8 === 0 && line.length > 50)) {\n      // New article detected\n      currentArticle++;\n      currentClause = 0;\n\n      structure.push({\n        type: 'article',\n        number: currentArticle.toString(),\n        title: line.trim(),\n        content: line,\n        line_number: index + 1,\n        clauses: []\n      });\n    } else if (clauseKeywords.some(keyword => lowerLine.includes(keyword)) && line.length > 30) {\n      // New clause detected\n      if (currentArticle === 0) {\n        currentArticle = 1;\n        structure.push({\n          type: 'article',\n          number: '1',\n          title: 'General Provisions',\n          content: '',\n          line_number: 1,\n          clauses: []\n        });\n      }\n\n      currentClause++;\n      const clauseNumber = `${currentArticle}.${currentClause}`;\n      const currentArticleIndex = structure.findIndex(item => item.number === currentArticle.toString());\n\n      if (currentArticleIndex >= 0) {\n        structure[currentArticleIndex].clauses.push({\n          type: 'clause',\n          number: clauseNumber,\n          content: line.trim(),\n          line_number: index + 1,\n          sub_clauses: []\n        });\n      }\n    }\n  });\n\n  return structure;\n}\n\n// Compare against standard library and identify deviations\nfunction compareAgainstStandardLibrary(articleStructure, contractType) {\n  console.log(\"Comparing against standard library for\", contractType);\n\n  // Simulated standard library comparison\n  const standardClauses = getStandardClausesForType(contractType);\n  const deviations = [];\n\n  articleStructure.forEach(article => {\n    article.clauses.forEach(clause => {\n      const standardClause = findMatchingStandardClause(clause, standardClauses);\n\n      if (standardClause) {\n        const deviation = analyzeDeviation(clause, standardClause);\n        if (deviation.has_deviation) {\n          deviations.push({\n            clause_reference: clause.number,\n            clause_title: extractClauseTitle(clause.content),\n            deviation_type: deviation.type,\n            negotiable_status: deviation.negotiable ? 'negotiable' : 'non-negotiable',\n            risk_level: deviation.risk_level,\n            current_language: clause.content.substring(0, 100) + '...',\n            standard_language: standardClause.content.substring(0, 100) + '...',\n            deviation_description: deviation.description,\n            business_impact: deviation.business_impact\n          });\n        }\n      } else {\n        // Missing standard clause\n        deviations.push({\n          clause_reference: 'Missing',\n          clause_title: 'Standard Clause Not Found',\n          deviation_type: 'missing_clause',\n          negotiable_status: 'non-negotiable',\n          risk_level: 'high',\n          current_language: 'Clause not present in contract',\n          standard_language: 'Required standard clause missing',\n          deviation_description: 'This contract is missing a standard clause required for this contract type',\n          business_impact: 'High risk due to missing legal protection'\n        });\n      }\n    });\n  });\n\n  return deviations;\n}\n\n// Generate improvement recommendations based on deviations\nfunction generateImprovementRecommendations(deviations) {\n  console.log(\"Generating improvement recommendations...\");\n\n  const recommendations = [];\n\n  deviations.forEach(deviation => {\n    const recommendation = {\n      clause_reference: deviation.clause_reference,\n      priority: mapRiskToPriority(deviation.risk_level),\n      recommendation_type: deviation.negotiable_status === 'negotiable' ? 'optimization' : 'compliance',\n      current_risk_score: calculateDeviationRiskScore(deviation),\n      improved_language: generateImprovedLanguage(deviation),\n      risk_mitigation: generateRiskMitigation(deviation),\n      business_benefit: generateBusinessBenefit(deviation),\n      implementation_notes: generateImplementationNotes(deviation)\n    };\n\n    recommendations.push(recommendation);\n  });\n\n  return recommendations;\n}\n\n// Helper functions for the new AI prompt structure\n\nfunction getStandardClausesForType(contractType) {\n  // Simulated standard library - in real implementation, this would come from a database\n  const standardLibrary = {\n    'content-management': [\n      {\n        id: 'termination',\n        title: 'Termination Clause',\n        content: 'Either party may terminate this agreement with thirty (30) days written notice.',\n        negotiable: true,\n        category: 'termination'\n      },\n      {\n        id: 'payment',\n        title: 'Payment Terms',\n        content: 'Payment shall be made within thirty (30) days of invoice receipt.',\n        negotiable: false,\n        category: 'financial'\n      },\n      {\n        id: 'liability',\n        title: 'Limitation of Liability',\n        content: 'Neither party shall be liable for indirect, incidental, or consequential damages.',\n        negotiable: true,\n        category: 'liability'\n      }\n    ],\n    'licensing': [\n      {\n        id: 'scope',\n        title: 'License Scope',\n        content: 'License is granted for the specific territory and duration outlined herein.',\n        negotiable: false,\n        category: 'scope'\n      }\n    ]\n  };\n\n  return standardLibrary[contractType] || standardLibrary['content-management'];\n}\n\nfunction findMatchingStandardClause(clause, standardClauses) {\n  // Simple keyword matching - in real implementation, this would use semantic analysis\n  const clauseText = clause.content.toLowerCase();\n\n  return standardClauses.find(standard => {\n    const keywords = standard.category;\n    return clauseText.includes(keywords) || clauseText.includes(standard.title.toLowerCase());\n  });\n}\n\nfunction analyzeDeviation(clause, standardClause) {\n  // Simulate deviation analysis\n  const clauseText = clause.content.toLowerCase();\n  const standardText = standardClause.content.toLowerCase();\n\n  // Simple similarity check\n  const similarity = calculateTextSimilarity(clauseText, standardText);\n\n  if (similarity < 0.7) {\n    return {\n      has_deviation: true,\n      type: 'language_deviation',\n      negotiable: standardClause.negotiable,\n      risk_level: standardClause.negotiable ? 'medium' : 'high',\n      description: `Current clause deviates from standard ${standardClause.title}`,\n      business_impact: standardClause.negotiable ?\n        'May impact negotiation position' :\n        'Critical compliance issue requiring immediate attention'\n    };\n  }\n\n  return { has_deviation: false };\n}\n\nfunction extractClauseTitle(content) {\n  // Extract title from clause content\n  const words = content.split(' ').slice(0, 5);\n  return words.join(' ') + '...';\n}\n\nfunction calculateTextSimilarity(text1, text2) {\n  // Simple similarity calculation - in real implementation, use proper NLP\n  const words1 = new Set(text1.split(' '));\n  const words2 = new Set(text2.split(' '));\n  const intersection = new Set([...words1].filter(x => words2.has(x)));\n  const union = new Set([...words1, ...words2]);\n\n  return intersection.size / union.size;\n}\n\nfunction mapRiskToPriority(riskLevel) {\n  const mapping = {\n    'high': 'critical',\n    'medium': 'high',\n    'low': 'medium'\n  };\n  return mapping[riskLevel] || 'medium';\n}\n\nfunction calculateDeviationRiskScore(deviation) {\n  const scores = {\n    'high': 85,\n    'medium': 60,\n    'low': 30\n  };\n  return scores[deviation.risk_level] || 50;\n}\n\nfunction generateImprovedLanguage(deviation) {\n  return `Recommended revision for ${deviation.clause_title}: [Specific improved language would be generated here based on standard library and AI analysis]`;\n}\n\nfunction generateRiskMitigation(deviation) {\n  return `Risk mitigation: Address ${deviation.deviation_type} to reduce ${deviation.risk_level} risk exposure`;\n}\n\nfunction generateBusinessBenefit(deviation) {\n  return `Business benefit: Implementing this change will improve legal compliance and reduce potential disputes`;\n}\n\nfunction generateImplementationNotes(deviation) {\n  return `Implementation: ${deviation.negotiable_status === 'negotiable' ? 'Can be negotiated with counterparty' : 'Must be implemented to maintain compliance'}`;\n}\n","// Application Configuration\n\n// API Configuration\nexport const API_CONFIG = {\n  USE_REAL_API: false, // Toggle between real API and demo mode\n  baseUrl: \"https://api.starling-ai.com/v1\",\n  demoMode: true,\n  endpoints: {\n    analyze: \"/analyze-contract\",\n    generate: \"/generate-contract\",\n    suggestions: \"/suggest-changes\"\n  },\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n};\n\n// Demo Data Configuration\nexport const DEMO_CONFIG = {\n  // Contract templates for generation\n  contractTemplates: {\n    'content-management': {\n      'music': {\n        title: 'Music Content Management Agreement',\n        baseContent: `MUSIC CONTENT MANAGEMENT AGREEMENT\n\nThis Music Content Management Agreement (\"Agreement\") is entered into on [DATE] between [ENTITY_NAME], a limited liability company (\"Manager\"), and [CONTENT_CREATOR] (\"Artist\").\n\n1. SCOPE OF SERVICES\nManager agrees to provide comprehensive music content management services including:\n- Digital distribution across all major streaming platforms\n- Rights management and royalty collection\n- Marketing and promotional campaigns\n- Performance tracking and analytics\n\n2. REVENUE SHARING\nArtist and Manager agree to the following revenue split:\n- Artist: [ARTIST_PERCENTAGE]%\n- Manager: [MANAGER_PERCENTAGE]%\n\n3. TERM AND TERRITORY\nThis Agreement shall remain in effect for [TERM_LENGTH] and covers [TERRITORY].\n\n4. RIGHTS GRANTED\nArtist grants Manager the right to manage [MUSIC_RIGHTS] for the specified territory and term.\n\n5. TERMINATION\nEither party may terminate this Agreement with [TERMINATION_NOTICE] days written notice.\n\nIN WITNESS WHEREOF, the parties have executed this Agreement as of the date first written above.\n\n[SIGNATURE BLOCKS]`\n      },\n      'non-music': {\n        title: 'Content Management Agreement',\n        baseContent: `CONTENT MANAGEMENT AGREEMENT\n\nThis Content Management Agreement (\"Agreement\") is entered into on [DATE] between [ENTITY_NAME] (\"Manager\") and [CONTENT_CREATOR] (\"Creator\").\n\n1. CONTENT MANAGEMENT SERVICES\nManager will provide comprehensive content management including:\n- [CONTENT_TYPE] optimization and strategy\n- Platform management for [PLATFORM_FOCUS]\n- Brand partnership facilitation\n- Revenue optimization and analytics\n\n2. COMPENSATION\nRevenue sharing: Creator [CREATOR_PERCENTAGE]%, Manager [MANAGER_PERCENTAGE]%\n\n3. TERM AND SCOPE\nDuration: [TERM_LENGTH]\nTerritory: [TERRITORY]\n\n4. TERMINATION\n[TERMINATION_NOTICE] days written notice required.\n\n[SIGNATURE BLOCKS]`\n      }\n    }\n  },\n\n  // Analysis response templates\n  analysisTemplates: {\n    risks: [\n      {\n        severity: 'high',\n        category: 'Missing Clause',\n        title: 'No Termination Clause',\n        description: 'Contract lacks clear termination conditions.',\n        suggestion: 'Add comprehensive termination clause with notice periods.'\n      },\n      {\n        severity: 'medium',\n        category: 'Legal Risk',\n        title: 'Liability Limitations',\n        description: 'Consider adding liability limitation clauses.',\n        suggestion: 'Include mutual liability caps and indemnification.'\n      }\n    ],\n    suggestions: [\n      {\n        type: 'Language Improvement',\n        priority: 'medium',\n        title: 'Clarify Payment Terms',\n        current: 'Payment terms are vague',\n        suggested: 'Specify exact payment schedules and methods',\n        benefit: 'Reduces payment disputes and improves cash flow'\n      }\n    ]\n  }\n};\n\n// UI Configuration\nexport const UI_CONFIG = {\n  animations: {\n    fadeInDuration: 300,\n    slideInDuration: 400,\n    progressUpdateInterval: 200\n  },\n  \n  themes: {\n    default: 'office-light',\n    supported: ['office-light', 'office-dark', 'office-colorful']\n  },\n  \n  validation: {\n    maxContractLength: 50000, // characters\n    minContractLength: 100,   // characters\n    requiredFields: ['agreement-type', 'content-type']\n  }\n};\n\n// Feature Flags\nexport const FEATURES = {\n  trackChanges: true,\n  realTimeAnalysis: false,\n  advancedSuggestions: true,\n  contractGeneration: true,\n  riskAnalysis: true\n};\n\n// AI Prompts Configuration\nexport const AI_PROMPTS = {\n  contractReview: {\n    systemPrompt: `You are an expert legal AI specialized in contract analysis. Given:\n\nAn active Microsoft Word document containing a commercial or legal contract.\n\nA predefined company standard clauses database (\"Standard Library\") with negotiable and non-negotiable terms clearly marked.\n\nPerform the following tasks step-by-step:\n\nContract Analysis:\n- Identify and extract all Articles and Clauses from the active Word document.\n- Clearly segment the contract into distinct clauses or sections.\n- Use numbers to define each article and clause (e.g. the first article of the first clause would be 1.1, the first sub-clause would be 1.1.1. The second article would be 2, while the first clause of article 2 would be 2.1, and so on)\n\nClause Comparison:\n- Compare each extracted clause against the corresponding clause from the Standard Library.\n- Highlight deviations clearly using Word's Track Changes feature.\n\nDeviation Summary:\n- Provide a concise summary detailing each deviation from the Standard Library.\n- Classify deviations into negotiable (flexible) and non-negotiable (must adhere strictly to the standard).\n\nImprovement Recommendations:\n- Suggest precise language revisions for clauses identified as negotiable to optimize the company's position.\n- For non-negotiable clauses, recommend specific edits that restore compliance with the Standard Library.\n- Quantify risks on current clauses and provide reasons for why the updated clause would be best.\n\nOutput Format:\n- Generate the tracked-changes directly within the Word document.\n- Provide a structured textual summary including:\n  * Clause reference (number/title)\n  * Brief description of the deviation\n  * Negotiable/non-negotiable status\n  * Recommended language improvements or restorations\n\nEnsure the analysis is thorough, professional, and actionable. Maintain accuracy and clarity in recommendations, prioritizing the company's legal and commercial interests. The recommendations must align with best legal practices and strategic objectives defined in the Standard Library.`,\n\n    userPromptTemplate: `Please analyze the following contract document:\n\nCONTRACT TEXT:\n{documentText}\n\nCONTRACT TYPE: {contractType}\n\nPlease provide a comprehensive analysis following the system instructions above, with particular attention to:\n1. Article and clause numbering (1, 1.1, 1.1.1, 2, 2.1, etc.)\n2. Deviation classification (negotiable vs non-negotiable)\n3. Risk quantification for each clause\n4. Specific language recommendations\n\nReturn the analysis in the structured format specified.`\n  },\n\n  riskAssessment: {\n    systemPrompt: `You are a legal risk assessment specialist. Analyze contracts for potential legal, financial, and operational risks.`,\n\n    userPromptTemplate: `Assess the risks in this contract:\n\n{documentText}\n\nFocus on:\n- Legal compliance risks\n- Financial exposure\n- Operational constraints\n- Termination risks\n- Liability issues\n\nProvide risk severity (high/medium/low) and mitigation strategies.`\n  },\n\n  clauseImprovement: {\n    systemPrompt: `You are a contract optimization expert. Suggest improvements to contract language that protect the company's interests while maintaining enforceability.`,\n\n    userPromptTemplate: `Improve the following contract clauses:\n\n{documentText}\n\nFor each clause, provide:\n- Current language assessment\n- Improved language suggestion\n- Business benefit explanation\n- Legal rationale`\n  }\n};\n"],"names":["_regeneratorRuntime","r","t","e","Object","prototype","n","hasOwnProperty","o","Symbol","i","iterator","a","asyncIterator","u","toStringTag","c","defineProperty","value","enumerable","configurable","writable","h","Generator","create","Error","done","method","arg","delegate","d","f","sent","_sent","dispatchException","abrupt","s","type","Context","call","wrap","GeneratorFunction","GeneratorFunctionPrototype","l","p","getPrototypeOf","y","x","v","g","forEach","_invoke","AsyncIterator","_typeof","resolve","__await","then","return","TypeError","next","w","tryEntries","push","m","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","unshift","pop","values","prev","charAt","slice","stop","rval","complete","finish","catch","delegateYield","_toConsumableArray","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","toString","test","_unsupportedIterableToArray","_nonIterableSpread","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","analyzeTrackChanges","_analyzeTrackChanges","_callee2","_context2","Word","Office","context","document","run","_ref","_callee","body","revisions","changeData","revision","_context","load","sync","hasChanges","items","totalRevisions","range","text","author","date","start","end","_x6","t0","console","error","checkClauseModifications","_x","_x2","_checkClauseModifications","_callee4","clauseText","startPosition","_context4","_ref2","_callee3","searchResults","hasModifications","modifications","_context3","search","matchCase","matchWholeWord","isModified","originalText","currentText","_x7","generateDemoAnalysis","_x3","_generateDemoAnalysis","_callee5","documentText","wordCount","hasSignatureLines","hasParties","hasTermination","hasCompensation","contractType","complianceScore","risks","structuredAnalysis","_context5","log","split","includes","toLowerCase","AI_PROMPTS","contractReview","systemPrompt","substring","generateStructuredAnalysis","t1","t2","Math","min","t3","concat","t4","t5","extractKeyTerms","t6","generateRecommendations","t7","parseContractStructureWithChanges","t8","contract_type","word_count","compliance_score","summary","key_terms","recommendations","structured_analysis","contract_structure","_x4","_x5","_generateStructuredAnalysis","_callee6","articleStructure","deviationAnalysis","improvementRecommendations","_context6","extractArticlesAndClauses","compareAgainstStandardLibrary","generateImprovementRecommendations","article_structure","deviation_analysis","improvement_recommendations","ai_prompt_used","analysis_timestamp","Date","toISOString","terms","lowerText","riskCount","hasSignatures","generateRiskAnalysis","severity","category","title","description","location","suggestion","total_risks","risk_score","calculateRiskScore","filter","score","risk","max","generateChangeSuggestions","suggestions","priority","current","suggested","benefit","total_suggestions","lines","line","trim","structure","currentArticle","currentClause","articleKeywords","clauseKeywords","index","lowerLine","some","keyword","number","content","line_number","clauses","clauseNumber","currentArticleIndex","findIndex","item","sub_clauses","standardClauses","standardLibrary","id","negotiable","getStandardClausesForType","deviations","article","clause","words","standardClause","find","standard","keywords","findMatchingStandardClause","deviation","text2","words1","words2","intersection","union","Set","has","size","has_deviation","risk_level","business_impact","analyzeDeviation","clause_reference","clause_title","join","deviation_type","negotiable_status","current_language","standard_language","deviation_description","riskLevel","recommendation","recommendation_type","current_risk_score","calculateDeviationRiskScore","improved_language","generateImprovedLanguage","risk_mitigation","generateRiskMitigation","business_benefit","implementation_notes","generateImplementationNotes","API_CONFIG","USE_REAL_API","baseUrl","demoMode","endpoints","analyze","generate","headers","DEMO_CONFIG","contractTemplates","baseContent","analysisTemplates","UI_CONFIG","animations","fadeInDuration","slideInDuration","progressUpdateInterval","themes","default","supported","validation","maxContractLength","minContractLength","requiredFields","FEATURES","trackChanges","realTimeAnalysis","advancedSuggestions","contractGeneration","riskAnalysis","userPromptTemplate","riskAssessment","clauseImprovement"],"sourceRoot":""}