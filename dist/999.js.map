{"version":3,"file":"999.js","mappings":"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","sources":["webpack://starling-word-addin/./src/taskpane/services/contract-parser.js"],"sourcesContent":["// Contract Structure Parser Service\n// NO STATIC IMPORTS - All imports will be dynamic to prevent Word API access during loading\n\n// Parse contract structure into articles and clauses\nexport function parseContractStructure(documentText) {\n  const lines = documentText.split('\\n').map(line => line.trim()).filter(line => line.length > 0);\n  const structure = {\n    articles: [],\n    metadata: {\n      totalLines: lines.length,\n      parsedAt: new Date().toISOString()\n    }\n  };\n\n  let currentArticle = null;\n  let articleNumber = 1;\n  let clauseNumber = 1;\n\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    \n    // Check if this line is an article header\n    if (isArticleHeader(line)) {\n      // Save previous article if exists\n      if (currentArticle) {\n        structure.articles.push(currentArticle);\n      }\n      \n      // Start new article\n      currentArticle = {\n        number: articleNumber++,\n        title: cleanArticleTitle(line),\n        clauses: [],\n        originalText: line\n      };\n      clauseNumber = 1; // Reset clause numbering for new article\n    } else if (currentArticle && isClause(line)) {\n      // Add clause to current article\n      currentArticle.clauses.push({\n        number: `${currentArticle.number}.${clauseNumber++}`,\n        text: line,\n        type: 'clause',\n        changeStatus: {\n          isModified: false,\n          hasChanges: false,\n          status: 'unmodified'\n        }\n      });\n    } else if (currentArticle && line.length > 20) {\n      // Add as continuation of previous clause or new clause if substantial\n      if (currentArticle.clauses.length > 0) {\n        // Append to last clause\n        const lastClause = currentArticle.clauses[currentArticle.clauses.length - 1];\n        lastClause.text += ' ' + line;\n      } else {\n        // First clause in article\n        currentArticle.clauses.push({\n          number: `${currentArticle.number}.${clauseNumber++}`,\n          text: line,\n          type: 'clause',\n          changeStatus: {\n            isModified: false,\n            hasChanges: false,\n            status: 'unmodified'\n          }\n        });\n      }\n    }\n  }\n\n  // Add the last article\n  if (currentArticle) {\n    structure.articles.push(currentArticle);\n  }\n\n  // If no articles were found, create a default structure\n  if (structure.articles.length === 0) {\n    structure.articles = createDefaultStructure(documentText);\n  }\n\n  return structure;\n}\n\n// Enhanced parsing function that includes change tracking\nexport async function parseContractStructureWithChanges(documentText) {\n  // First get the basic structure\n  const basicStructure = parseContractStructure(documentText);\n\n  try {\n    // Ensure Word API is available\n    if (typeof Word === 'undefined') {\n      throw new Error('Word API not available. Please ensure you are running this add-in in Microsoft Word.');\n    }\n\n    // Additional check for Office.js initialization\n    if (!Office.context || !Office.context.document) {\n      throw new Error('Office.js not properly initialized. Please refresh the add-in.');\n    }\n\n    // Check actual Word track changes status\n    const trackChangesStatus = await Word.run(async (context) => {\n      const document = context.document;\n      document.load(\"changeTrackingMode\");\n      await context.sync();\n      \n      return {\n        isEnabled: document.changeTrackingMode === Word.ChangeTrackingMode.trackAll,\n        mode: document.changeTrackingMode\n      };\n    });\n\n    // If track changes is enabled, analyze real changes\n    if (trackChangesStatus.isEnabled) {\n      // Dynamic import to prevent early Word API access\n      const { analyzeTrackChanges, checkClauseModifications } = await import('./contract-analyzer.js');\n      const changeData = await analyzeTrackChanges();\n\n      // Enhance each clause with real change information\n      if (basicStructure.articles && basicStructure.articles.length > 0) {\n        for (let article of basicStructure.articles) {\n          for (let clause of article.clauses) {\n            // Check if this clause has been modified\n            const clauseChanges = await checkClauseModifications(clause.text);\n            clause.changeStatus = {\n              isModified: clauseChanges.isModified,\n              hasChanges: clauseChanges.hasChanges,\n              modifications: clauseChanges.modifications || [],\n              status: clauseChanges.isModified ? 'modified' : 'unmodified'\n            };\n          }\n        }\n      }\n\n      const modifiedCount = basicStructure.articles.reduce((count, article) =>\n        count + article.clauses.filter(clause => clause.changeStatus?.isModified).length, 0);\n\n      return {\n        ...basicStructure,\n        trackChanges: {\n          enabled: true,\n          totalRevisions: changeData.totalRevisions,\n          hasChanges: changeData.hasChanges,\n          lastAnalyzed: new Date().toISOString(),\n          modifiedClauses: modifiedCount\n        }\n      };\n    } else {\n      // Track changes is disabled - show current status\n      return {\n        ...basicStructure,\n        trackChanges: {\n          enabled: false,\n          totalRevisions: 0,\n          hasChanges: false,\n          lastAnalyzed: new Date().toISOString(),\n          note: \"Track changes is currently disabled. Enable track changes in Word to see modification tracking.\"\n        }\n      };\n    }\n  } catch (error) {\n    console.error(\"Error checking track changes status:\", error);\n    \n    // Fallback to demo mode if there's an error\n    if (basicStructure.articles && basicStructure.articles.length > 0) {\n      generateDemoChangeTracking(basicStructure.articles);\n    }\n\n    const modifiedCount = basicStructure.articles.reduce((count, article) =>\n      count + article.clauses.filter(clause => clause.changeStatus?.isModified).length, 0);\n\n    return {\n      ...basicStructure,\n      trackChanges: {\n        enabled: true,\n        totalRevisions: modifiedCount,\n        hasChanges: modifiedCount > 0,\n        lastAnalyzed: new Date().toISOString(),\n        demoMode: true,\n        note: \"Demo mode - simulated changes for testing\"\n      }\n    };\n  }\n}\n\n// Helper functions for parsing\nfunction isArticleHeader(line) {\n  // Check for various article header patterns\n  const patterns = [\n    /^\\d+\\.\\s+[A-Z]/,  // \"1. ARTICLE TITLE\"\n    /^Article\\s+\\d+/i,  // \"Article 1\" or \"ARTICLE 1\"\n    /^Section\\s+\\d+/i,  // \"Section 1\" or \"SECTION 1\"\n    /^[A-Z\\s]{3,}$/,    // ALL CAPS titles\n    /^\\d+\\.\\d+\\s+[A-Z]/ // \"1.1 SUBSECTION\"\n  ];\n  \n  return patterns.some(pattern => pattern.test(line));\n}\n\nfunction isClause(line) {\n  // A clause is typically a substantial line of text (not just a title)\n  return line.length > 30 && !isArticleHeader(line);\n}\n\nfunction cleanArticleTitle(line) {\n  // Remove numbering and clean up the title\n  return line.replace(/^\\d+\\.\\s*/, '')\n             .replace(/^Article\\s+\\d+:?\\s*/i, '')\n             .replace(/^Section\\s+\\d+:?\\s*/i, '')\n             .trim();\n}\n\nfunction createDefaultStructure(documentText) {\n  // Create a basic structure when no clear articles are found\n  const paragraphs = documentText.split('\\n\\n').filter(p => p.trim().length > 50);\n  \n  return [{\n    number: 1,\n    title: \"Contract Terms\",\n    clauses: paragraphs.slice(0, 5).map((paragraph, index) => ({\n      number: `1.${index + 1}`,\n      text: paragraph.trim(),\n      type: 'clause',\n      changeStatus: {\n        isModified: false,\n        hasChanges: false,\n        status: 'unmodified'\n      }\n    })),\n    originalText: \"Contract Terms\"\n  }];\n}\n\n// Generate demo change tracking data for testing\nexport function generateDemoChangeTracking(articles) {\n  articles.forEach((article, articleIndex) => {\n    article.clauses.forEach((clause, clauseIndex) => {\n      // Randomly mark some clauses as modified for demo purposes\n      const isModified = Math.random() < 0.3; // 30% chance of being modified\n      \n      clause.changeStatus = {\n        isModified: isModified,\n        hasChanges: isModified,\n        status: isModified ? 'modified' : 'unmodified',\n        modifications: isModified ? [\n          {\n            type: 'insertion',\n            text: 'demo modification',\n            author: 'Demo User',\n            date: new Date().toISOString()\n          }\n        ] : []\n      };\n    });\n  });\n}\n"],"names":["_regeneratorRuntime","r","t","e","Object","prototype","n","hasOwnProperty","o","Symbol","i","iterator","a","asyncIterator","u","toStringTag","c","defineProperty","value","enumerable","configurable","writable","h","Generator","create","Error","done","method","arg","delegate","d","f","sent","_sent","dispatchException","abrupt","s","type","Context","call","wrap","GeneratorFunction","GeneratorFunctionPrototype","l","p","getPrototypeOf","y","x","v","g","forEach","_invoke","AsyncIterator","_typeof","resolve","__await","then","return","TypeError","next","w","tryEntries","push","m","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","unshift","pop","values","prev","charAt","slice","stop","rval","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","parseContractStructure","documentText","lines","split","map","line","trim","filter","structure","articles","metadata","totalLines","parsedAt","Date","toISOString","currentArticle","articleNumber","clauseNumber","isArticleHeader","number","title","cleanArticleTitle","clauses","originalText","isClause","concat","text","changeStatus","isModified","hasChanges","status","paragraph","index","createDefaultStructure","parseContractStructureWithChanges","_x","_parseContractStructureWithChanges","_callee2","basicStructure","_yield$import","analyzeTrackChanges","checkClauseModifications","changeData","_iterator","_step","article","_iterator2","_step2","clause","clauseChanges","modifiedCount","_modifiedCount","_context2","Word","Office","context","document","run","_ref","_callee","_context","load","sync","isEnabled","changeTrackingMode","ChangeTrackingMode","trackAll","mode","_x2","_createForOfIteratorHelper","modifications","t0","t1","reduce","count","_clause$changeStatus","_objectSpread","trackChanges","enabled","totalRevisions","lastAnalyzed","modifiedClauses","note","t2","console","error","generateDemoChangeTracking","_clause$changeStatus2","demoMode","some","pattern","test","replace","articleIndex","clauseIndex","Math","random","author","date"],"sourceRoot":""}