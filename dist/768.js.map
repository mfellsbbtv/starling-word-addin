{"version":3,"file":"768.js","mappings":"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","sources":["webpack://starling-word-addin/./src/shared/api-service.js","webpack://starling-word-addin/./src/shared/config.js"],"sourcesContent":["// API Service Layer - following augment-guidelines: centralized API calls\nimport { AI_PROMPTS } from './config.js';\n\nexport class APIService {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async makeRequest(endpoint, options = {}) {\n    if (!this.config.USE_REAL_API) {\n      console.log(`[DEMO MODE] Would call API: ${endpoint}`, options);\n      return this.getMockResponse(endpoint, options);\n    }\n\n    const url = `${this.config.baseUrl}${endpoint}`;\n    const requestOptions = {\n      method: options.method || 'GET',\n      headers: {\n        ...this.config.headers,\n        ...options.headers\n      },\n      ...options\n    };\n\n    if (options.body && typeof options.body === 'object') {\n      requestOptions.body = JSON.stringify(options.body);\n    }\n\n    try {\n      const response = await fetch(url, requestOptions);\n\n      if (!response.ok) {\n        throw new Error(`API Error: ${response.status} ${response.statusText}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('API Request failed:', error);\n      throw error;\n    }\n  }\n\n  // Mock responses for demo mode\n  getMockResponse(endpoint, options) {\n    if (endpoint.includes('/analyze')) {\n      return this.getMockAnalysisResponse(options.body);\n    } else if (endpoint.includes('/generate')) {\n      return this.getMockGenerationResponse(options.body);\n    } else if (endpoint.includes('/health')) {\n      return { status: 'healthy', timestamp: new Date().toISOString() };\n    }\n\n    return { message: 'Mock response', endpoint, options };\n  }\n\n  getMockAnalysisResponse(requestData) {\n    // Return mock analysis data (existing demo logic)\n    return {\n      contract_type: \"Content Management Agreement\",\n      compliance_score: 85,\n      summary: \"This contract appears well-structured with standard clauses.\",\n      risks: [\n        { severity: \"medium\", description: \"Consider adding force majeure clause\" },\n        { severity: \"low\", description: \"Termination notice period could be more specific\" }\n      ],\n      key_terms: [\"Payment Terms\", \"Geographic Scope\", \"Rights Management\"],\n      recommendations: [\n        \"Consider legal review before execution\",\n        \"Ensure all parties review terms carefully\"\n      ]\n    };\n  }\n\n  getMockGenerationResponse(requestData) {\n    // Return mock generation data\n    return {\n      contract_text: \"Generated contract content would be here...\",\n      metadata: {\n        template_used: requestData?.agreement_type || \"content-management\",\n        generated_at: new Date().toISOString()\n      }\n    };\n  }\n\n  // API Methods\n  async analyzeContract(documentText, contractType = 'general') {\n    // Prepare the AI prompt for real API calls\n    const userPrompt = AI_PROMPTS.contractReview.userPromptTemplate\n      .replace('{documentText}', documentText)\n      .replace('{contractType}', contractType);\n\n    return this.makeRequest('/contracts/analyze', {\n      method: 'POST',\n      body: {\n        document_text: documentText,\n        contract_type: contractType,\n        analysis_type: 'comprehensive',\n        ai_prompt: {\n          system_prompt: AI_PROMPTS.contractReview.systemPrompt,\n          user_prompt: userPrompt\n        },\n        requirements: {\n          article_numbering: true,\n          deviation_classification: true,\n          risk_quantification: true,\n          track_changes: true\n        }\n      }\n    });\n  }\n\n  async generateContract(formData) {\n    return this.makeRequest('/contracts/generate', {\n      method: 'POST',\n      body: formData\n    });\n  }\n\n  async checkHealth() {\n    return this.makeRequest('/health');\n  }\n}\n","// Application Configuration\n\n// API Configuration\nexport const API_CONFIG = {\n  USE_REAL_API: false, // Toggle between real API and demo mode\n  baseUrl: \"https://api.starling-ai.com/v1\",\n  demoMode: true,\n  endpoints: {\n    analyze: \"/analyze-contract\",\n    generate: \"/generate-contract\",\n    suggestions: \"/suggest-changes\"\n  },\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n};\n\n// Demo Data Configuration\nexport const DEMO_CONFIG = {\n  // Contract templates for generation\n  contractTemplates: {\n    'content-management': {\n      'music': {\n        title: 'Music Content Management Agreement',\n        baseContent: `MUSIC CONTENT MANAGEMENT AGREEMENT\n\nThis Music Content Management Agreement (\"Agreement\") is entered into on [DATE] between [ENTITY_NAME], a limited liability company (\"Manager\"), and [CONTENT_CREATOR] (\"Artist\").\n\n1. SCOPE OF SERVICES\nManager agrees to provide comprehensive music content management services including:\n- Digital distribution across all major streaming platforms\n- Rights management and royalty collection\n- Marketing and promotional campaigns\n- Performance tracking and analytics\n\n2. REVENUE SHARING\nArtist and Manager agree to the following revenue split:\n- Artist: [ARTIST_PERCENTAGE]%\n- Manager: [MANAGER_PERCENTAGE]%\n\n3. TERM AND TERRITORY\nThis Agreement shall remain in effect for [TERM_LENGTH] and covers [TERRITORY].\n\n4. RIGHTS GRANTED\nArtist grants Manager the right to manage [MUSIC_RIGHTS] for the specified territory and term.\n\n5. TERMINATION\nEither party may terminate this Agreement with [TERMINATION_NOTICE] days written notice.\n\nIN WITNESS WHEREOF, the parties have executed this Agreement as of the date first written above.\n\n[SIGNATURE BLOCKS]`\n      },\n      'non-music': {\n        title: 'Content Management Agreement',\n        baseContent: `CONTENT MANAGEMENT AGREEMENT\n\nThis Content Management Agreement (\"Agreement\") is entered into on [DATE] between [ENTITY_NAME] (\"Manager\") and [CONTENT_CREATOR] (\"Creator\").\n\n1. CONTENT MANAGEMENT SERVICES\nManager will provide comprehensive content management including:\n- [CONTENT_TYPE] optimization and strategy\n- Platform management for [PLATFORM_FOCUS]\n- Brand partnership facilitation\n- Revenue optimization and analytics\n\n2. COMPENSATION\nRevenue sharing: Creator [CREATOR_PERCENTAGE]%, Manager [MANAGER_PERCENTAGE]%\n\n3. TERM AND SCOPE\nDuration: [TERM_LENGTH]\nTerritory: [TERRITORY]\n\n4. TERMINATION\n[TERMINATION_NOTICE] days written notice required.\n\n[SIGNATURE BLOCKS]`\n      }\n    }\n  },\n\n  // Analysis response templates\n  analysisTemplates: {\n    risks: [\n      {\n        severity: 'high',\n        category: 'Missing Clause',\n        title: 'No Termination Clause',\n        description: 'Contract lacks clear termination conditions.',\n        suggestion: 'Add comprehensive termination clause with notice periods.'\n      },\n      {\n        severity: 'medium',\n        category: 'Legal Risk',\n        title: 'Liability Limitations',\n        description: 'Consider adding liability limitation clauses.',\n        suggestion: 'Include mutual liability caps and indemnification.'\n      }\n    ],\n    suggestions: [\n      {\n        type: 'Language Improvement',\n        priority: 'medium',\n        title: 'Clarify Payment Terms',\n        current: 'Payment terms are vague',\n        suggested: 'Specify exact payment schedules and methods',\n        benefit: 'Reduces payment disputes and improves cash flow'\n      }\n    ]\n  }\n};\n\n// UI Configuration\nexport const UI_CONFIG = {\n  animations: {\n    fadeInDuration: 300,\n    slideInDuration: 400,\n    progressUpdateInterval: 200\n  },\n  \n  themes: {\n    default: 'office-light',\n    supported: ['office-light', 'office-dark', 'office-colorful']\n  },\n  \n  validation: {\n    maxContractLength: 50000, // characters\n    minContractLength: 100,   // characters\n    requiredFields: ['agreement-type', 'content-type']\n  }\n};\n\n// Feature Flags\nexport const FEATURES = {\n  trackChanges: true,\n  realTimeAnalysis: false,\n  advancedSuggestions: true,\n  contractGeneration: true,\n  riskAnalysis: true\n};\n\n// AI Prompts Configuration\nexport const AI_PROMPTS = {\n  contractReview: {\n    systemPrompt: `You are an expert legal AI specialized in contract analysis. Given:\n\nAn active Microsoft Word document containing a commercial or legal contract.\n\nA predefined company standard clauses database (\"Standard Library\") with negotiable and non-negotiable terms clearly marked.\n\nPerform the following tasks step-by-step:\n\nContract Analysis:\n- Identify and extract all Articles and Clauses from the active Word document.\n- Clearly segment the contract into distinct clauses or sections.\n- Use numbers to define each article and clause (e.g. the first article of the first clause would be 1.1, the first sub-clause would be 1.1.1. The second article would be 2, while the first clause of article 2 would be 2.1, and so on)\n\nClause Comparison:\n- Compare each extracted clause against the corresponding clause from the Standard Library.\n- Highlight deviations clearly using Word's Track Changes feature.\n\nDeviation Summary:\n- Provide a concise summary detailing each deviation from the Standard Library.\n- Classify deviations into negotiable (flexible) and non-negotiable (must adhere strictly to the standard).\n\nImprovement Recommendations:\n- Suggest precise language revisions for clauses identified as negotiable to optimize the company's position.\n- For non-negotiable clauses, recommend specific edits that restore compliance with the Standard Library.\n- Quantify risks on current clauses and provide reasons for why the updated clause would be best.\n\nOutput Format:\n- Generate the tracked-changes directly within the Word document.\n- Provide a structured textual summary including:\n  * Clause reference (number/title)\n  * Brief description of the deviation\n  * Negotiable/non-negotiable status\n  * Recommended language improvements or restorations\n\nEnsure the analysis is thorough, professional, and actionable. Maintain accuracy and clarity in recommendations, prioritizing the company's legal and commercial interests. The recommendations must align with best legal practices and strategic objectives defined in the Standard Library.`,\n\n    userPromptTemplate: `Please analyze the following contract document:\n\nCONTRACT TEXT:\n{documentText}\n\nCONTRACT TYPE: {contractType}\n\nPlease provide a comprehensive analysis following the system instructions above, with particular attention to:\n1. Article and clause numbering (1, 1.1, 1.1.1, 2, 2.1, etc.)\n2. Deviation classification (negotiable vs non-negotiable)\n3. Risk quantification for each clause\n4. Specific language recommendations\n\nReturn the analysis in the structured format specified.`\n  },\n\n  riskAssessment: {\n    systemPrompt: `You are a legal risk assessment specialist. Analyze contracts for potential legal, financial, and operational risks.`,\n\n    userPromptTemplate: `Assess the risks in this contract:\n\n{documentText}\n\nFocus on:\n- Legal compliance risks\n- Financial exposure\n- Operational constraints\n- Termination risks\n- Liability issues\n\nProvide risk severity (high/medium/low) and mitigation strategies.`\n  },\n\n  clauseImprovement: {\n    systemPrompt: `You are a contract optimization expert. Suggest improvements to contract language that protect the company's interests while maintaining enforceability.`,\n\n    userPromptTemplate: `Improve the following contract clauses:\n\n{documentText}\n\nFor each clause, provide:\n- Current language assessment\n- Improved language suggestion\n- Business benefit explanation\n- Legal rationale`\n  }\n};\n"],"names":["_regeneratorRuntime","r","t","e","Object","prototype","n","hasOwnProperty","o","Symbol","i","iterator","a","asyncIterator","u","toStringTag","c","defineProperty","value","enumerable","configurable","writable","h","Generator","create","Error","done","method","arg","delegate","d","f","sent","_sent","dispatchException","abrupt","s","type","Context","call","wrap","GeneratorFunction","GeneratorFunctionPrototype","l","p","getPrototypeOf","y","x","v","g","forEach","_invoke","AsyncIterator","_typeof","resolve","__await","then","return","TypeError","next","w","tryEntries","push","m","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","unshift","pop","values","prev","charAt","slice","stop","rval","complete","finish","catch","delegateYield","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","apply","_objectSpread","arguments","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","asyncGeneratorStep","_asyncToGenerator","_next","_throw","_defineProperties","key","toPrimitive","String","_toPrimitive","APIService","config","_classCallCheck","this","_makeRequest","_callee","endpoint","options","url","requestOptions","response","_args","_context","undefined","USE_REAL_API","console","log","concat","getMockResponse","baseUrl","headers","body","JSON","stringify","fetch","ok","status","statusText","json","t0","error","_x","includes","getMockAnalysisResponse","getMockGenerationResponse","timestamp","Date","toISOString","message","requestData","contract_type","compliance_score","summary","risks","severity","description","key_terms","recommendations","contract_text","metadata","template_used","agreement_type","generated_at","_analyzeContract","_callee2","documentText","contractType","userPrompt","_args2","_context2","AI_PROMPTS","contractReview","userPromptTemplate","replace","makeRequest","document_text","analysis_type","ai_prompt","system_prompt","systemPrompt","user_prompt","requirements","article_numbering","deviation_classification","risk_quantification","track_changes","_x2","_generateContract","_callee3","formData","_context3","_x3","_checkHealth","_callee4","_context4","API_CONFIG","demoMode","endpoints","analyze","generate","suggestions","DEMO_CONFIG","contractTemplates","title","baseContent","analysisTemplates","category","suggestion","priority","current","suggested","benefit","UI_CONFIG","animations","fadeInDuration","slideInDuration","progressUpdateInterval","themes","default","supported","validation","maxContractLength","minContractLength","requiredFields","FEATURES","trackChanges","realTimeAnalysis","advancedSuggestions","contractGeneration","riskAnalysis","riskAssessment","clauseImprovement"],"sourceRoot":""}