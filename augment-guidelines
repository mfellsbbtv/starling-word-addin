# .augment-guidelines  
Formal, concise instructions for Agent & Chat in this workspace.  
Target: secure, scalable AWS-based web apps delivered with Terraform.

## 1. General
- Reply clearly and briefly; include code only when it clarifies the answer.  
- Apply OWASP Top 10, AWS Well-Architected security, and least-privilege IAM.  

## 2. Preferred Stack
- **Runtime**: Python 3.12 / Node 20 LTS (FastAPI or Express).  
- **Containers**: Docker ⇒ ECR ⇒ ECS Fargate (ARM64).  
- **IaC**: Terraform ≥ 1.7; state in S3, lock with DynamoDB.
- **Functions**: AWS Lambda container images (ARM64); Dockerfile + `make build-lambda` (buildx) ⇒ `lambda.zip`.

## 3. AWS Architecture Defaults
- **Networking** VPC per env; ALB in public subnets; compute in private subnets behind NAT **unless workload demands sustained high outbound cross-region throughput—then use public-IP tasks with egress-only SG rules**.
- **Compute** ECS Fargate with Service Auto Scaling; task IAM roles only.  
- **Data** RDS PostgreSQL Multi-AZ or Aurora; storage encryption on; auto minor upgrades.  
- **Static** S3 + CloudFront (Origin Access Control).  
- **Secrets** AWS Secrets Manager; no hard-coded creds.  
- **Observability** CloudWatch logs/metrics + X-Ray tracing.

## 4. Terraform Conventions
- One root module per account/env; reusable child modules in `/modules`.  
- `backend.tf` with workspaces named `<app>-<env>`; lock files committed.  
- Keep real variables in SSM Parameter Store; commit only `*.tfvars.example`.  
- Enforce `terraform fmt -check` & `tflint` in CI.

## 5. Security Must-Haves
- Mandatory tags: `Project`, `Environment`, `Owner`.  
- ALB HTTPS (TLS 1.2+), force-redirect HTTP→HTTPS.  
- AWS WAF with Core rule set.  
- IMDSv2 on any EC2; prefer Fargate over EC2.  
- No public S3 ACLs, plaintext secrets, or long-lived EC2 pets.

## 6. CI/CD
- GitHub Actions → Build → Push to ECR → Deploy to ECS.  
- One-line `make` targets (e.g., `make plan ENV=prod`).  
- Semantic version tags; immutable images.

## 7. Code Style
- Python: PEP 8, ≤ 100 chars/line.  
- JS/TS: eslint-airbnb rules.  
- Fun, thematic resource names (mythology, surf) while remaining descriptive.

## 8. Scalability Prompt
_When traffic or data volume is unclear, ask:_  
“Provide expected peak RPS, data size, and 12-month growth so I can size auto-scaling policies and database classes.”

## 9. Forbidden Patterns
- Local Terraform state, public S3 buckets, hard-coded secrets, deprecated libraries.  
- Chained `&&` in Docker `CMD`; use entrypoint scripts instead.

(≈1 550 characters)
