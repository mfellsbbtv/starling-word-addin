{"version":3,"file":"commands.js","mappings":"YACA,IAAIA,EAAsB,CAAC,ECD3BA,EAAoBC,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCOxBC,OAAOC,SAAQ,WACb,IAoDF,IAAMP,EATmB,oBAATQ,KACVA,KACkB,oBAAXH,OACPA,YACkB,IAAXI,EAAAA,EACPA,EAAAA,OACAC,EAMNV,EAAEW,aAhDF,SAAsBC,GAEpBN,OAAOO,OAAOC,cAAc,CAC1BC,KAAM,CACJ,CACEC,GAAI,gBACJC,SAAU,CACR,CACED,GAAI,0BACJE,SAAS,QAOnBN,EAAMO,WACR,EAgCAnB,EAAEoB,gBA1BF,SAAyBR,GAEvBN,OAAOe,MAAMC,iBAGTjB,OAAOkB,QAAUlB,OAAOkB,OAAOH,iBACjCf,OAAOkB,OAAOH,kBAGhBR,EAAMO,WACR,C","sources":["webpack://starling-word-addin/webpack/bootstrap","webpack://starling-word-addin/webpack/runtime/global","webpack://starling-word-addin/./src/commands/commands.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global global, Office, self, window */\n\nOffice.onReady(() => {\n  // If needed, Office.js is ready to be called\n});\n\n/**\n * Shows the task pane.\n * @param event {Office.AddinCommands.Event}\n */\nfunction showTaskpane(event) {\n  // Your code goes here\n  Office.ribbon.requestUpdate({\n    tabs: [\n      {\n        id: \"Starling.Tab1\",\n        controls: [\n          {\n            id: \"Starling.TaskpaneButton\",\n            enabled: true\n          }\n        ]\n      }\n    ]\n  });\n\n  event.completed();\n}\n\n/**\n * Analyze contract from ribbon button\n * @param event {Office.AddinCommands.Event}\n */\nfunction analyzeContract(event) {\n  // Show task pane and trigger analysis\n  Office.addin.showAsTaskpane();\n  \n  // Trigger the analysis function\n  if (window.parent && window.parent.analyzeContract) {\n    window.parent.analyzeContract();\n  }\n  \n  event.completed();\n}\n\nfunction getGlobal() {\n  return typeof self !== \"undefined\"\n    ? self\n    : typeof window !== \"undefined\"\n    ? window\n    : typeof global !== \"undefined\"\n    ? global\n    : undefined;\n}\n\nconst g = getGlobal();\n\n// The add-in command functions need to be available in global scope\ng.showTaskpane = showTaskpane;\ng.analyzeContract = analyzeContract;\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","Office","onReady","self","global","undefined","showTaskpane","event","ribbon","requestUpdate","tabs","id","controls","enabled","completed","analyzeContract","addin","showAsTaskpane","parent"],"sourceRoot":""}