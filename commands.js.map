{"version":3,"file":"commands.js","mappings":";UAAA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;;;ACPD;AACA;AACA;AACA;;AAEA;;AAEAA,MAAM,CAACC,OAAO,CAAC,YAAM;EACnB;AAAA,CACD,CAAC;;AAEF;AACA;AACA;AACA;AACA,SAASC,YAAYA,CAACC,KAAK,EAAE;EAC3B;EACAH,MAAM,CAACI,MAAM,CAACC,aAAa,CAAC;IAC1BC,IAAI,EAAE,CACJ;MACEC,EAAE,EAAE,eAAe;MACnBC,QAAQ,EAAE,CACR;QACED,EAAE,EAAE,yBAAyB;QAC7BE,OAAO,EAAE;MACX,CAAC;IAEL,CAAC;EAEL,CAAC,CAAC;EAEFN,KAAK,CAACO,SAAS,CAAC,CAAC;AACnB;;AAEA;AACA;AACA;AACA;AACA,SAASC,eAAeA,CAACR,KAAK,EAAE;EAC9B;EACAH,MAAM,CAACY,KAAK,CAACC,cAAc,CAAC,CAAC;;EAE7B;EACA,IAAIC,MAAM,CAACC,MAAM,IAAID,MAAM,CAACC,MAAM,CAACJ,eAAe,EAAE;IAClDG,MAAM,CAACC,MAAM,CAACJ,eAAe,CAAC,CAAC;EACjC;EAEAR,KAAK,CAACO,SAAS,CAAC,CAAC;AACnB;AAEA,SAASM,SAASA,CAAA,EAAG;EACnB,OAAO,OAAOC,IAAI,KAAK,WAAW,GAC9BA,IAAI,GACJ,OAAOH,MAAM,KAAK,WAAW,GAC7BA,MAAM,GACN,OAAOI,qBAAM,KAAK,WAAW,GAC7BA,qBAAM,GACNC,SAAS;AACf;AAEA,IAAMC,CAAC,GAAGJ,SAAS,CAAC,CAAC;;AAErB;AACAI,CAAC,CAAClB,YAAY,GAAGA,YAAY;AAC7BkB,CAAC,CAACT,eAAe,GAAGA,eAAe,C","sources":["webpack://starling-word-addin/webpack/bootstrap","webpack://starling-word-addin/webpack/runtime/global","webpack://starling-word-addin/./src/commands/commands.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global global, Office, self, window */\n\nOffice.onReady(() => {\n  // If needed, Office.js is ready to be called\n});\n\n/**\n * Shows the task pane.\n * @param event {Office.AddinCommands.Event}\n */\nfunction showTaskpane(event) {\n  // Your code goes here\n  Office.ribbon.requestUpdate({\n    tabs: [\n      {\n        id: \"Starling.Tab1\",\n        controls: [\n          {\n            id: \"Starling.TaskpaneButton\",\n            enabled: true\n          }\n        ]\n      }\n    ]\n  });\n\n  event.completed();\n}\n\n/**\n * Analyze contract from ribbon button\n * @param event {Office.AddinCommands.Event}\n */\nfunction analyzeContract(event) {\n  // Show task pane and trigger analysis\n  Office.addin.showAsTaskpane();\n  \n  // Trigger the analysis function\n  if (window.parent && window.parent.analyzeContract) {\n    window.parent.analyzeContract();\n  }\n  \n  event.completed();\n}\n\nfunction getGlobal() {\n  return typeof self !== \"undefined\"\n    ? self\n    : typeof window !== \"undefined\"\n    ? window\n    : typeof global !== \"undefined\"\n    ? global\n    : undefined;\n}\n\nconst g = getGlobal();\n\n// The add-in command functions need to be available in global scope\ng.showTaskpane = showTaskpane;\ng.analyzeContract = analyzeContract;\n"],"names":["Office","onReady","showTaskpane","event","ribbon","requestUpdate","tabs","id","controls","enabled","completed","analyzeContract","addin","showAsTaskpane","window","parent","getGlobal","self","global","undefined","g"],"sourceRoot":""}